<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>kidlovec.github.io</title>
   
   <link>http://localhost:4000</link>
   <description>做一个谦卑，忠诚的实践者，不要做一个严谨，深沉的思想家. The story begins here.</description>
   <language>en-uk</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>在 mac 上搭建本地 redis cluster</title>
	  <link>/2019-11-13-build-local-redis-cluster/</link>
	  <author></author>
	  <pubDate>2019-11-13T06:13:21+08:00</pubDate>
	  <guid>/2019-11-13-build-local-redis-cluster/</guid>
	  <description><![CDATA[
	     <blockquote>
  <p>Mac 搭建 redis cluster</p>
</blockquote>

<pre><code class="language-bash">cd ~
mkdir redis-cluster
cd redis-cluster
for ((i=1; i&lt;=6;i++)); do mkdir $(expr 9000 + $i); done
# 将本地 brew 安装好的 redis 配置拷贝过来
cp /usr/local/etc/redis.conf 9001/redis.conf
</code></pre>

<p>修改 redis 配置</p>

<pre><code class="language-bash"># 端口号，每个目录都不同
port 9001
# 开启集群模式
cluster-enabled yes
#节点超时实际，单位毫秒
cluster-node-timeout 5000
#集群内部配置文件(默认为 nodes.conf)
cluster-config-file nodes-9001.conf
# 启动 AOF
appendonly yes
# append 文件名
appendfilename "appendonly-9001.aof"
# dir /usr/local/var/db/redis/ 
# 注意: 这里 {cluster-path} 换成本地集群文件的位置 比如 /Users/your-name/redis-cluster/9001
dir {cluster-path}/9001/
</code></pre>

<p>依次修改 其他文件夹
比如 9002 文件夹</p>

<pre><code class="language-bash">cp 9001/redis.conf 9002/redis.conf &amp;&amp; sed -i "s/9001/9002/g" 9002/redis.conf
</code></pre>

<p>或者用批量命令</p>

<pre><code class="language-bash"># 复制文件
for PORT in {9002..9006}; do cp 9001/redis.conf $PORT/redis.conf &amp;&amp; ;  done
# 修改文件
for PORT in {9002..9006}; do sed -i '' "s/9001/$PORT/g" "$PORT/redis.conf" ;  done
</code></pre>

<p>查看一下改动</p>

<pre><code class="language-bash">for PORT in {9002..9006}; do grep -w $PORT $PORT/redis.conf -n ; done
92:port 9002
264:dir Users/kidlovec/redis-cluster/9002
677:appendfilename "appendonly-9002.aof"
823:cluster-config-file nodes-9002.conf
92:port 9003
264:dir Users/kidlovec/redis-cluster/9003
677:appendfilename "appendonly-9003.aof"
823:cluster-config-file nodes-9003.conf
92:port 9004
264:dir Users/kidlovec/redis-cluster/9004
677:appendfilename "appendonly-9004.aof"
823:cluster-config-file nodes-9004.conf
92:port 9005
264:dir Users/kidlovec/redis-cluster/9005
677:appendfilename "appendonly-9005.aof"
823:cluster-config-file nodes-9005.conf
92:port 9006
264:dir Users/kidlovec/redis-cluster/9006
677:appendfilename "appendonly-9006.aof"
823:cluster-config-file nodes-9006.conf
</code></pre>

<p>改完了, 这时候文件树是这样的</p>

<pre><code>
➜ tree -L 2
.
├── 9001
│   └── redis.conf
├── 9002
│   └── redis.conf
├── 9003
│   └── redis.conf
├── 9004
│   └── redis.conf
├── 9005
│   └── redis.conf
└── 9006
    └── redis.conf

</code></pre>

<p>写一个 集群管理简易脚本</p>

<pre><code class="language-bash">vi cluster.sh
</code></pre>

<pre><code class="language-bash">#!/bin/bash 

REDIS_HOME=~/redis-cluster
APP_NAME=redis
WAIT_TIME=2
echo "REDIS_HOME:"${REDIS_HOME}

start() {
	for PORT in {9001..9006}
	do
	    REDIS_ID=$(ps -ef | grep ${APP_NAME} |grep ${PORT}| grep -v 'grep' | head -1 | awk '{print $2}')
	    
	    if [ -z "$REDIS_ID" ]; then
	       
	        echo ""
	        echo "[${APP_NAME}-$PORT] starting ..."
	        echo ""
	        cd $REDIS_HOME/$PORT
	        redis-server redis.conf &amp; &gt;/dev/null 2&gt;&amp;1
	        sleep ${WAIT_TIME}
	    else
	    echo "[${APP_NAME}] has been started! "
	    fi   
	done
}

stop() {
	for PORT in {9001..9006}
	do
	    REDIS_ID=$(ps -ef | grep ${APP_NAME} |grep ${PORT}| grep -v 'grep' | head -1 | awk '{print $2}')
	    if [ -z "$REDIS_ID" ]; then
	           
	        echo "[${APP_NAME}-$PORT] has been stopped!"
	    else
	        echo ""
	        echo "[${APP_NAME}-$PORT] is stoping ..."
	        echo ""
	        kill -15 $REDIS_ID
	        sleep ${WAIT_TIME}
	    fi   
	done
}

status() {
	
	for PORT in {9001..9006}
	do
	    REDIS_ID=$(ps -ef | grep ${APP_NAME} |grep ${PORT}| grep -v 'grep' | head -1 | awk '{print $2}')
	    if [ -z "$REDIS_ID" ]; then
	        echo "[${APP_NAME}-$PORT] has been stop !"
	    else
	        echo "[${APP_NAME}-$PORT] is running !"
	    fi
	done
}

case "$1" in
start)
echo "starting redis cluster"
start
;;
stop)
echo "stopping redis cluster servers "
stop
;;
status)
status
;;
restart)
echo "restart redis cluster"
$0 stop
sleep 2
$0 start
;;
*)
printf 'Usage: %s {start|stop|status|restart}\n' "$prog"
exit 1
;;
esac
</code></pre>
<h3 id="启动集群">启动集群</h3>

<pre><code>./cluster.sh start
</code></pre>

<p>这时候文件树是这样的</p>

<pre><code class="language-bash">➜ tree -L 2
.
├── 9001
│   ├── 9001.log
│   ├── appendonly-9001.aof
│   ├── nodes-9001.conf
│   └── redis.conf
├── 9002
│   ├── 9002.log
│   ├── appendonly-9002.aof
│   ├── nodes-9002.conf
│   └── redis.conf
├── 9003
│   ├── 9003.log
│   ├── appendonly-9003.aof
│   ├── nodes-9003.conf
│   └── redis.conf
├── 9004
│   ├── 9004.log
│   ├── appendonly-9004.aof
│   ├── nodes-9004.conf
│   └── redis.conf
├── 9005
│   ├── 9005.log
│   ├── appendonly-9005.aof
│   ├── nodes-9005.conf
│   └── redis.conf
├── 9006
│   ├── 9006.log
│   ├── appendonly-9006.aof
│   ├── nodes-9006.conf
│   └── redis.conf
└── create-cluster.sh

6 directories, 25 files

</code></pre>

<h2 id="设置-集群">设置 集群</h2>

<p>Redis 5 的 集群管理由原来的 ruby 脚本，都换成 C 中了，可以直接使用 <code>redis-cli</code> 更加便捷</p>

<p>具体可以查看 <code>cluster</code> 支持的命令</p>

<pre><code class="language-bash">redis-cli --cluster help
</code></pre>

<p>现在 我们创建集群</p>

<p>以下命令可以自动为我们设置 三主三从的集群
9001 &lt;– 9004
9002 &lt;– 9005
9003 &lt;– 9006</p>

<pre><code class="language-bash">
redis-cli --cluster create 127.0.0.1:9001 127.0.0.1:9002 127.0.0.1:9003 127.0.0.1:9004 127.0.0.1:9005 127.0.0.1:9006 --cluster-replicas 1

&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...
Master[0] -&gt; Slots 0 - 5460
Master[1] -&gt; Slots 5461 - 10922
Master[2] -&gt; Slots 10923 - 16383
Adding replica 127.0.0.1:9004 to 127.0.0.1:9001
Adding replica 127.0.0.1:9005 to 127.0.0.1:9002
Adding replica 127.0.0.1:9006 to 127.0.0.1:9003
&gt;&gt;&gt; Trying to optimize slaves allocation for anti-affinity
[WARNING] Some slaves are in the same host as their master
M: 18a2f6036c486dc5df56edb096ac879590cc76b2 127.0.0.1:9001
   slots:[0-5460] (5461 slots) master
M: 4635943ae587ff32e0e3f28dc9b533231bab6af7 127.0.0.1:9002
   slots:[5461-10922] (5462 slots) master
M: bb9396c5c3c6a16a38be58810026395331515a34 127.0.0.1:9003
   slots:[10923-16383] (5461 slots) master
S: 935906dec5a496caa7bfefd8562582afef41c7f6 127.0.0.1:9004
   replicates 4635943ae587ff32e0e3f28dc9b533231bab6af7
S: 40356db1c9b7847b41099bb06da8e3e5022f679b 127.0.0.1:9005
   replicates bb9396c5c3c6a16a38be58810026395331515a34
S: add58f1bb36a5da23bfe5c8b8249836725ec27cb 127.0.0.1:9006
   replicates 18a2f6036c486dc5df56edb096ac879590cc76b2
Can I set the above configuration? (type 'yes' to accept): 27.0.0.1:9004
   replicates 4635943ae587ff32e0e3f28dc9b533231bab6af7
S: 40356db1c9b7847b41099bb06da8e3e5022f679b 127.0.0.1:9005
   replicates bb9396c5c3c6a16a38be58810026395331515a34
S: add58f1bb36a5da23bfe5c8b8249836725ec27cb 127.0.0.1:9006
   replicates 18a2f6036c486dc5df56edb096ac879590cc76b2
Can I set the above configuration? (type 'yes' to accept): 

</code></pre>

<p>同意</p>

<pre><code class="language-bash">Can I set the above configuration? (type 'yes' to accept): yes
&gt;&gt;&gt; Nodes configuration updated
&gt;&gt;&gt; Assign a different config epoch to each node
&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join
.
&gt;&gt;&gt; Performing Cluster Check (using node 127.0.0.1:9001)
M: 18a2f6036c486dc5df56edb096ac879590cc76b2 127.0.0.1:9001
   slots:[0-5460] (5461 slots) master
   1 additional replica(s)
M: 4635943ae587ff32e0e3f28dc9b533231bab6af7 127.0.0.1:9002
   slots:[5461-10922] (5462 slots) master
   1 additional replica(s)
S: add58f1bb36a5da23bfe5c8b8249836725ec27cb 127.0.0.1:9006
   slots: (0 slots) slave
   replicates bb9396c5c3c6a16a38be58810026395331515a34
M: bb9396c5c3c6a16a38be58810026395331515a34 127.0.0.1:9003
   slots:[10923-16383] (5461 slots) master
   1 additional replica(s)
S: 40356db1c9b7847b41099bb06da8e3e5022f679b 127.0.0.1:9005
   slots: (0 slots) slave
   replicates 4635943ae587ff32e0e3f28dc9b533231bab6af7
S: 935906dec5a496caa7bfefd8562582afef41c7f6 127.0.0.1:9004
   slots: (0 slots) slave
   replicates 18a2f6036c486dc5df56edb096ac879590cc76b2
[OK] All nodes agree about slots configuration.
&gt;&gt;&gt; Check for open slots...
&gt;&gt;&gt; Check slots coverage...
[OK] All 16384 slots covered.
</code></pre>

<p>这样集群就创建成功了，进入集群查看</p>

<pre><code class="language-bash">➜ redis-cli -p 9001 cluster nodes
4635943ae587ff32e0e3f28dc9b533231bab6af7 127.0.0.1:9002@19002 master - 0 1588066642132 2 connected 5461-10922
add58f1bb36a5da23bfe5c8b8249836725ec27cb 127.0.0.1:9006@19006 slave bb9396c5c3c6a16a38be58810026395331515a34 0 1588066642334 6 connected
18a2f6036c486dc5df56edb096ac879590cc76b2 127.0.0.1:9001@19001 myself,master - 0 1588066642000 1 connected 0-5460
bb9396c5c3c6a16a38be58810026395331515a34 127.0.0.1:9003@19003 master - 0 1588066642000 3 connected 10923-16383
40356db1c9b7847b41099bb06da8e3e5022f679b 127.0.0.1:9005@19005 slave 4635943ae587ff32e0e3f28dc9b533231bab6af7 0 1588066642334 5 connected
935906dec5a496caa7bfefd8562582afef41c7f6 127.0.0.1:9004@19004 slave 18a2f6036c486dc5df56edb096ac879590cc76b2 0 1588066642132 4 connected

</code></pre>

	  ]]></description>
	</item>

	<item>
	  <title>Flink Introduction</title>
	  <link>/2018-05-04-flink-introduce/</link>
	  <author></author>
	  <pubDate>2018-05-04T18:18:00+08:00</pubDate>
	  <guid>/2018-05-04-flink-introduce/</guid>
	  <description><![CDATA[
	     <p><strong>目录</strong></p>

<h1 id="0--what-is-apache-flink">0.  What is Apache Flink</h1>

<blockquote>
  <p>是一个支持实时分析和实时计算的开源的分布式 <strong>流处理</strong> 平台。 Apache Flink 能够提供高效，快速，准确和容错的高容量的有界/无界事件流处理能力。</p>
</blockquote>

<p>Apache Flink 是一个框架和分布式处理引擎，用于在无边界和有边界数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。</p>

<h2 id="处理无界和有界数据">处理无界和有界数据</h2>
<p>任何类型的数据都可以形成一种事件流。信用卡交易、传感器测量、机器日志、网站或移动应用程序上的用户交互记录，所有这些数据都形成一种流。</p>

<p><img src="./../assets/img/bounded-unbounded.png" alt="" /></p>

<p>数据可以被作为 无界 或者 有界 流来处理。</p>

<p>无界流 有定义流的开始，但没有定义流的结束。</p>

<blockquote>
  <p>它们会无休止地产生数据。无界流的数据必须持续处理，即数据被摄取后需要立刻处理。</p>
</blockquote>

<p>我们不能等到所有数据都到达再处理，因为输入是无限的，在任何时候输入都不会完成。
处理无界数据通常要求以特定顺序摄取事件，例如事件发生的顺序，以便能够推断结果的完整性。</p>

<p>有界流 有定义流的开始，也有定义流的结束。有界流可以在摄取所有数据后再进行计算。有界流所有数据可以被排序，所以并不需要有序摄取。有界流处理通常被称为批处理</p>

<h1 id="1-前世今生">1. 前世今生</h1>

<p>Flink 起源于 2009 年，柏林工业大学的一个名叫 <strong><a href="http://stratosphere.eu/">Stratosphere</a> 「平流层」</strong> 的研究项目。旨在 <strong>设计下一代的大数据分析平台</strong> 。</p>
<ul>
  <li>在 2014 年 4月贡献给了 Apache 基金会。
在 2015 年 1月成为 Apache 顶级项目</li>
</ul>

<blockquote>
  <p>初代的 Stratosphere 专注于 底层的运行时，优化器，和 java API的设计。而后，整个平台趋于 成熟, 0.6 之后 更名 Flink 。0.7 之后 引入了 Streaming API 。</p>
</blockquote>

<h2 id="1-早期的设计">1. 早期的设计</h2>

<p><img src="./../assets/img/the-origin-design-1.png" alt="" /></p>

<h2 id="2-早期的设计变迁">2. 早期的设计变迁</h2>

<p><img src="./../assets/img/the-evolution-of-Stratosphere-happened-over-time.png" alt="" /></p>

<h2 id="3-优点特性">3. 优点/特性</h2>

<ul>
  <li>
    <p>高性能.
Flink旨在实现高性能和低延迟。与其他流式框架（如Spark）不同，您无需执行许多手动配置即可获得最佳性能。与其对应物相比，Flink的流水线数据处理提供了更好的性能。</p>
  </li>
  <li>
    <p>Exactly-once 状态计算
Flink的分布式检查点处理有助于保证每个记录只处理一次。在高吞吐量应用程序的情况下，Flink为我们提供了一个允许至少一次处理的开关。</p>
  </li>
  <li>
    <p>灵活的流式传输windows
Flink支持数据驱动的窗口。这意味着我们可以根据时间，计数或会话设计一个窗口。还可以定制一个窗口，允许我们检测事件流中的特定模式.</p>
  </li>
  <li>
    <p>Fault tolerance
Flink的分布式轻量级快照机制有助于实现高度的容错能力。它允许Flink提供高吞吐量的性能和有保证的交付。内存管理.Flink在JVM中提供了自己的内存管理，使其独立于Java的默认垃圾收集器。它通过使用散列，索引，缓存和排序有效地进行内存管理.</p>
  </li>
  <li>
    <p>Optimizer
Flink的批处理数据处理 API 经过优化，以避免消耗内存，排序等内存消耗。它还确保使用缓存以避免繁重的磁盘IO操作。</p>
  </li>
  <li>
    <p>platform 一个统一的计算平台</p>
  </li>
</ul>

<p>Flink中的流和批处理为批处理和流数据处理提供 API 。因此，一旦设置了Flink环境，它就可以轻松地托管流和批处理应用程序。事实上，Flink在Streaming第一原理上工作，并将批处理视为streaming的特殊情况.</p>

<ul>
  <li>
    <p>Libraries
Flink拥有丰富的库来进行机器学习，图形处理，关系数据处理等。由于其架构，很容易执行复杂的事件处理和警报。</p>
  </li>
  <li>
    <p>事件时间语义.
Flink支持事件时间语义。这有助于处理事件无序到达的流。有时事件可能会延迟。 Flink的架构允许我们根据时间，计数和会话定义窗口，这有助于处理这些场景。</p>
  </li>
</ul>

<h2 id="4--应用场景">4. <a name=""></a> 应用场景</h2>

<ul>
  <li>Event-Driven Applications
    <ul>
      <li>实时推荐系统</li>
      <li>模式识别类的应用（如 信用卡交易中的欺诈检测）</li>
      <li>支付宝安全检测</li>
    </ul>
  </li>
  <li>Data Pipelines
    <ul>
      <li>系统升级，数据迁移等</li>
    </ul>
  </li>
  <li>Streaming Analytics</li>
</ul>

<hr />

<h1 id="概念介绍">概念介绍</h1>

<ul>
  <li>What is Stream Processing?</li>
</ul>

<blockquote>
  <p>事件驱动型应用是一类具有状态的应用，它从一个或多个事件流提取数据，并根据到来的事件触发计算、状态更新或其他外部动作。</p>
</blockquote>

<blockquote>
  <p>事件驱动型应用是在计算存储分离的传统应用基础上进化而来。在传统架构中，应用需要读写远程事务型数据库。</p>
</blockquote>

<blockquote>
  <p>相反，事件驱动型应用是基于状态化流处理来完成。在该设计中，数据和计算不会分离，应用只需访问本地（内存或磁盘）即可获取数据。系统容错性的实现依赖于定期向远程持久化存储写入 checkpoint。下图描述了传统应用和事件驱动型应用架构的区别。</p>
</blockquote>

<p><img src="./../assets/img/stream-vs-tradition.jpg" alt="" /></p>

<blockquote>
  <p>例如基于事件时间的有且仅有一次性语义保证和数据窗口，开发人员不再需要在应用程序层中考虑这些问题。 这种风格导致更少的错误。</p>
</blockquote>

<blockquote>
  <p>原有的开源大数据计算方案(lambda 架构)，会把流处理和批处理作为两种不同的应用类型，因为它们所提供的SLA（Service-Level-Aggreement）是完全不相同的：流处理一般需要支持低延迟、Exactly-once保证，而批处理需要支持高吞吐、高效处理。</p>
</blockquote>

<p><img src="./../assets/img/lambda.png" alt="" /></p>

<blockquote>
  <p>Flink从另一个视角看待流处理和批处理，将二者统一起来：Flink是完全支持流处理，也就是说作为流处理看待时输入数据流是无界的；<strong>批处理被作为一种特殊的流处理，只是它的输入数据流被定义为有界的</strong>。</p>
</blockquote>

<h2 id="3-数据流编程模型">3. 数据流编程模型</h2>

<h3 id="31-抽象级别">3.1. 抽象级别</h3>

<ul>
  <li>Flink提供了不同级别的抽象，以开发流或批处理作业。</li>
</ul>

<p><img src="./../assets/img/levels_of_abstraction.svg" alt="" /></p>

<hr />

<ul>
  <li>最底层级的抽象仅仅提供了有状态流。</li>
</ul>

<blockquote>
  <p>它将通过过程函数（Process Function）嵌入到 DataStream API 中。它允许用户可以自由地处理来自一个或多个数据流的件，并使用一致的容错的状态。除此之外，用户可以注册事件时间并处理时间回调，从使程序可以处理复杂的计算。</p>
</blockquote>

<ul>
  <li>实际上，大多数应用并不需要上述的底层抽象，而是针对 核心 API （Core API ） 进行编程</li>
</ul>

<blockquote>
  <p>比如 DataStream API （有界或无界流数据）以及 DataSet API 有界数据集）。这些 API 为数据处理提供了通用的构建模块，比如由用户定义的多种式的转换（transformations），连接（joins），聚合（aggregations），窗操作（windows），状态（state）等等。这些 API 处理的数据类型以类（classe）的形式由各自的编程语言所表示。</p>
</blockquote>

<ul>
  <li>
    <p>底层 过程函数（Process Function） 与 DataStream API相集成，使其可以某些特定的操作进行底层的抽象。</p>

    <p>DataSet API为有界数据集提供了额外的原语，如循环与迭代。</p>
  </li>
  <li>Table API是以 表 为中心的声明式DSL，其中表可能会动态变化（在表达流数据）。
Table API 遵循（扩展的）关系模型：表有二维数据结构（schema）（类似于系数据库中的表），同时 API 提供可比较的操作，例如select、project、joi、group-by、aggregate等。Table API 程序声明式地定义了 什么逻辑操作应该行 而不是准确地确定 这些操作代码的看上去如何 。 尽管Table API 可以通过多类型的用户自定义函数（UDF）进行扩展，其仍不如 核心 API更具表达能力，但是使起来却更加简洁（代码量更少）。除此之外，Table API 程序在执行之前会经过内置化器进行优化。</li>
  <li>你可以在表与 DataStream / DataSet 之间无缝切换，以允许程序将 TableAPI与 DataStream 以及 DataSet 混合使用。</li>
</ul>

<blockquote>
  <p>用户可以通过各种方法将数据进行转换 / 计算。
    - map
    - flatmap
    - window
    - keyby
    - sum
    - max
    - min
    - avg
    - join 等</p>
</blockquote>

<ul>
  <li>Flink提供的最高层级的抽象是 SQL 。这一层抽象在语法与表达能力上与 TableAPI类似，但是是以SQL查询表达式的形式表现程序。SQL抽象与Table API 交互密，同时SQL查询可以直接在Table API 定义的表上执行。</li>
</ul>

<h3 id="32-程序与数据流">3.2. <a name="-1"></a>程序与数据流</h3>

<ul>
  <li>
    <p>Flink程序的基础构建模块是 流（streams） 与 转换（transformations）。（需要注意的是，Flink的 DataSet API 所使用的 DataSet s其内部也是流。）概念上来讲，流是（可能永无止境的）数据记录流，而 转换 是一种操作，它取一个或多个流作为输入，并生产出一个或多个输出流作为结果。</p>
  </li>
  <li>
    <p>执行时，Flink程序映射到 流数据流（streaming dataflows） ，由 流 以及转换 算子 构成。每一个数据流起始于一个或多个 source，并终止于一个或多个 sink。数据流类似于任意的 有向无环图 （DAG） 。虽然通过 迭代 构造允许特定形式的环，但是大多数情况下，简单起见，我们都不考虑这一点。</p>
  </li>
</ul>

<p><img src="./../assets/img/program_dataflow.svg" alt="" /></p>

<p>通常，程序中的转换与数据流中的操作之间是一对一的关系。有时，然而，一个转换可能由多个转换操作构成。</p>

<ol>
  <li>
    <p>Source: 数据源，Flink 在流处理和批处理上的 source 大概有 4 类：基于本地集合的 source、基于文件的 source、基于网络套接字的 source、自定义的 source。自定义的 source 常见的有 Apache kafka、Amazon Kinesis Streams、RabbitMQ、Twitter Streaming API 、Apache NiFi 等，当然你也可以定义自己的 source。</p>
  </li>
  <li>
    <p>Transformation：数据转换的各种操作，有 Map / FlatMap / Filter / KeyBy / Reduce / Fold / Aggregations / Window / WindowAll / Union / Window join / Split / Select / Project 等，操作很多，可以将数据转换计算成你想要的数据。</p>
  </li>
  <li>
    <p>Sink：接收器，Flink 将转换计算后的数据发送的地点 ，你可能需要存储下来，Flink 常见的 Sink 大概有如下几类：写入文件、打印出来、写入 socket 、自定义的 sink 。自定义的 sink 常见的有 Apache kafka、RabbitMQ、MySQL、ElasticSearch、Apache Cassandra、Hadoop FileSystem 等，同理你也可以定义自己的 sink。</p>
  </li>
</ol>

<h3 id="33-并行数据流">3.3. <a name="-1"></a>并行数据流</h3>

<p>Flink程序本质上是并行分布的。在执行过程中，一个 流 包含一个或多个 流分区 ，而每一个 算子 包含一个或多个 算子 子任务 。操作子任务间彼此独立，以不同的线程执行，甚至有可能运行在不同的机器或容器上。</p>

<p>算子 子任务的数量即这一特定 算子 的 <strong>并行度</strong> 。一个流的并行度即其生产算子的并行度。相同程序中的不同的算子可能有不同级别的并行度。</p>

<p><img src="./../assets/img/parallel_dataflow.svg" alt="" /></p>

<p>流在两个算子之间传输数据，可以通过 一对一 （或称 forwarding ）模式，或者通过 redistributing 模式：</p>

<ul>
  <li>一对一 流
    <blockquote>
      <p>（例如上图中 Source 与 map算子之间）保持了元素的分区与排序。那意味着 map 算子的子任务[1]将以与 Source 的子任务[1]生成顺序相同的顺序查看到相同的元素。</p>
    </blockquote>
  </li>
  <li>Redistributing 流（如上图中 map() 与 keyBy/window 之间，以及 keyBy/window 与 Sink 之间）则改变了流的分区。
    <blockquote>
      <p>每一个算子子任务 根据所选择的转换，向不同的目标子任务发送数据。
比如 <code>keyBy()</code> （根据key的哈希值重新分区）， broadcast() ，或者 rebalance() （随机重分区）。
在一次 redistributing 交换中，元素间的排序只保留在每对发送与接受子任务中（比如， map() 的子任务[1]与 keyBy/window 的子任务[2]）。
因此在这个例子中，每个键的顺序被保留下来，但是并行确实引入了对于不同键的聚合结果到达sink的顺序的不确定性。</p>
    </blockquote>
  </li>
</ul>

<hr />

<h3 id="34-窗口-window">3.4. <a name="window"></a>窗口 window</h3>

<p>聚合事件（比如计数、求和）在流上的工作方式与批处理不同。比如，对流中的所有元素进行计数是不可能的，因为通常流是无限的（无界的）。相反，流上的聚合需要由 窗口 来划定范围，比如 “计算过去的5分钟” ，或者 “最后100个元素的和” 。
<img src="./../assets/img/windows.svg" alt="" /></p>

<p>窗口可以是 事件驱动的 （比如：每30秒）或者 数据驱动的 （比如：每100个元素）。窗口通常被区分为不同的类型，比如 滚动窗口 （没有重叠）， 滑动窗口 （有重叠），以及 会话窗口 （由不活动的间隙所打断）</p>

<p><img src="./../assets/img/window-types.png" alt="" /></p>

<h3 id="35-时间-time">3.5. <a name="time"></a>时间 time</h3>

<p>当提到流程序（例如定义窗口）中的时间时，你可以参考不同的时间概念：
<img src="./../assets/img/time-types.png" alt="" /></p>

<ul>
  <li>
    <p>事件时间(Event Time) 是事件创建的时间。它通常由事件中的时间戳描述，例如附接在生产传感器，或者生产服务。Flink通过时间戳分配器访问事件时间戳。</p>
  </li>
  <li>
    <p>摄入时间(Ingestion Time) 是事件进入Flink数据流源算子的时间。</p>
  </li>
  <li>
    <p>处理事件(Processing Time) 是每一个执行时间操作的算子的本地时间。</p>
  </li>
</ul>

<h3 id="36-有状态操作-statefual-operate">3.6. <a name="statefualoperate"></a>有状态操作 statefual operate</h3>

<p>尽管数据流中的很多操作一次只查看一个独立的事件（比如事件解析器），有些操作却会记录多个事件间的信息（比如窗口算子）。 这些操作被称为 有状态的 。</p>

<p>有状态操作的状态保存在一个可被视作嵌入式键/值存储的部分中。状态与由有状态算子读取的流一起被严格地分区与分布。因此，只能访问一个 keyBy() 函数之后的 keyed streams 的键/值状态，并且仅限于与当前事件键相关联的值。对齐流和状态的键确保了所有状态更新都是本地操作，以在没有事务开销的情况下确保一致性。这种对齐还使得Flink可以透明地重新分配状态与调整流的分区。</p>

<p><img src="./../assets/img/state_partitioning.svg" alt="" /></p>

<h3 id="37-容错检查点-checkpoint">3.7. <a name="checkpoint"></a>容错检查点 checkpoint</h3>

<p>Flink使用 流重放 与 Checkpoint 的结合实现了容错。Checkpoint与每一个输入流及其相关的每一个算子的状态的特定点相关联。一个流数据流可以可以从一个checkpoint恢复出来，其中通过恢复算子状态并从检查点重放事件以保持一致性（一次处理语义）</p>

<p>检查点间隔是以恢复时间（需要重放的事件数量）来消除执行过程中容错的开销的一种手段。</p>

<blockquote>
  <p>它不断为 分布式数据流 和 执行器状态 拍摄快照. 设计灵感来自 Chandy-Lamport 算法，但已根据Flink的定制要求进行了修改,如果发生任何故障，Flink将停止执行程序并重置它们并从最新的可用检查点开始执行,在绘制快照时，Flink处理记录的对齐，以避免因任何故障而重新处理相同的记录</p>
</blockquote>

<h3 id="38-流上的批处理">3.8. <a name="-1"></a>流上的批处理</h3>

<p>Flink将批处理程序作为流处理程序的特殊情况来执行，只是流是有界的（有限个元素）。 DataSet 内部被视为数据流。上述适用于流处理程序的概念同样适用于批处理程序，除了一些例外：</p>

<ul>
  <li>
    <p>DataSet API 中的程序不使用检查点。而通过完全地重放流来恢复。因为输入是有界的，因此这是可行的。这种方法使得恢复的成本增加，但是由于避免了检查点，因而使得正常处理的开销更小。</p>
  </li>
  <li>
    <p>DataSet API 中的有状态操作使用简化的im-memory/out-of-core数据结构，而不是键/值索引。</p>
  </li>
  <li>
    <p>DataSet API 引入了特殊的同步（基于superstep的）迭代，而这种迭代仅仅能在有界流上执行。细节可以查看迭代文档。</p>
  </li>
</ul>

<hr />

<h2 id="4-分布式运行时环境">4. <a name="-1"></a>分布式运行时环境</h2>

<h3 id="41-任务和算子链">4.1. <a name="-1"></a>任务和算子链</h3>

<p>分布式计算中，Flink会将算子（operator） 的子task链式组成tasks，每个task由一个线程执行。把算子链化为tasks是一个非常好的优化：它减少了线程之间的通信和缓冲，而且还能增加吞吐量降低延迟。</p>

<p>下图中dataflow有5个subtasks，因此有5个线程并发进行处理。</p>

<p><img src="./../assets/img/tasks_chains.svg" alt="" /></p>

<h3 id="42-job-managers-task-managers-clients">4.2. <a name="JobManagersTaskManagersClients"></a>Job Managers, Task Managers, Clients</h3>

<p>Flink运行时包含两类进程：</p>

<ul>
  <li>
    <p>JobManagers （也称为 masters）用来协调分布式计算。负责进行任务调度，协调checkpoints，协调错误恢复等等。至少需要一个JobManager。高可用部署下会有多个JobManagers，其中一个作为leader，其余处于standby状态。</p>
  </li>
  <li>
    <p>TaskManagers（也称为 workers）真正执行dataflow中的tasks（更准确的描述是，subtasks），并且对 streams进行缓存和交换。至少需要一个TaskManager。</p>
  </li>
</ul>

<p>有多种方式可以启动JobManagers和TaskManagers：直接在计算机上启动作为 standalone cluster，在容器中或者由资源管理器YARN 或者 Mesos启动。 TaskManagers连接到JobManagers后，会通知JobManagers自己已可用，接着被分配工作。</p>

<p>client 不作为运行时（runtime）和程序执行的一部分，只是用于准备和发送dataflow作业给JobManager。 因此客户端可以断开连接，或者保持连接以接收进度报告。客户端可以作为触发执行的Java/Scala 程序的一部分或者运行在命令行进程中 <code>./bin/flink run ...</code>。</p>

<p><img src="./../assets/img/processes.svg" alt="" /></p>

<h3 id="43-task-slots-and-resources">4.3. <a name="TaskSlotsandResources"></a>Task Slots and Resources</h3>

<blockquote>
  <p>‘Flink数据流默认是以分布式并行的方式执行的。对于并行数据处理，Flink对 算子和流进行分区。算子 分区称为子任务(sub tasks)。’</p>
</blockquote>

<p>每个 worker ( TaskManager)都是一个 JVM 进程，并且可以在不同的线程中执行一个或多个subtasks。每个 worker用 task slots（任务槽位） (至少有一个)来控制可以接收多少个 tasks。</p>

<p>每个task slot代表TaskManager中一个固定的资源子集。例如，有3个slots的TaskManager会将它的内存资源划分成3份分配给每个slot。划分资源意味着subtask不会和来自其他作业的subtasks竞争资源，但是也意味着它只拥有固定的内存资源。注意划分资源不进行CPU隔离，只划分内存资源给不同的tasks。</p>

<p>通过调整 slots 的个数进而可以调整 subtasks 之间的隔离方式。当每个 TaskManager 只有一个 slot 时，意味着每个 task group 运行在不同的JVM中（例如：可能在不同的container中）。当每个TaskManager有多个slots时，意味着多个subtasks可以共享同一个JVM。同一个JVM中的tasks共享TCP连接（通过多路复用技术）和心跳消息。可能还会共享数据集和数据结构，从而减少每个task的开销。</p>

<p><img src="./../assets/img/tasks_slots.svg" alt="" /></p>

<p>默认情况下，只要subtasks是来自同一个job，Flink允许不同tasks的subtasks共享slots。因此，一个slot可能会负责job的整个pipeline。允许slot sharing有两个好处：</p>

<p>Flink集群需要的slots的数量和job的最高并发度相同，不需要计算一个作业总共包含多少个tasks（具有不同并行度）。</p>

<p>更易获取更好的资源利用率。没有slot sharing，非集中型subtasks（source/map()）将会占用和集中型subtasks （window）一样多的资源。在我们的示例中，允许共享slot，可以将示例作业的并发度从2增加到6，从而可以充分利用资源，同时保证负载很重的subtasks可以在TaskManagers中平均分配。</p>

<p><img src="./../assets/img/slot_sharing.svg" alt="" /></p>

<p>API s还包含了一种 <em>资源组（resource group）</em> 机制，用来防止不必要的slot sharing。</p>

<p>经验来讲，task slots的默认值应该与CPU核数一致。在使用超线程下，一个slot将会占用2个或更多的硬件资源。</p>

<h3 id="44-状态管理-state-backends">4.4. <a name="StateBackends"></a>状态管理 State Backends</h3>

<p>key/values 索引存储的准确数据结构取决于选择的 state backend。其中一个 state backend将数据存储在内存hash map中，另一个 state backend使用RocksDB作为key/value 存储。 除了定义存储状态的数据结构， state backends还实现了获取 key/value状态的时间点快照的逻辑，并将该快照存储为checkpoint的一部分。</p>

<p><img src="./../assets/img/checkpoints.svg" alt="" /></p>

<h3 id="45-savepoints">4.5. <a name="Savepoints"></a>Savepoints</h3>

<p>使用DataStream API 编写的程序可以从一个savepoint恢复执行。Savepoints允许在不丢失任何状态的情况下修改程序和Flink集群。</p>

<p>Savepoints 是手动触发的checkpoints，它依赖常规的checkpointing机制，生成程序快照并将其写入到状态后端。在运行期间，worker节点周期性的生成程序快照并产生checkpoints。在恢复重启时只会使用最后成功的checkpoint。并且只要有一个新的checkpoint生成时，旧的checkpoints将会被安全地丢弃。</p>

<p>Savepoints与周期性触发的checkpoints很类似，但是其式由由用户触发的，且当更新的checkpoints完成时，老的checkpoint不会自动失效。可以通过命令行或者在取消一个job时调用REST API 的方式创建Savepoints。</p>

<h2 id="5-checkpoint">5. <a name="checkpoint-1"></a>checkpoint</h2>

<blockquote>
  <p>checkpoint使Fink的状态具有非常好的容错性，通过Checkpoint，Flink可以对作业的状态和计算位置进行恢复，因此Flink作业具备高容错执行语意。 通过 Checkpointing 查看如何在程序中开启和配置checkpoint。</p>
</blockquote>

<p><code>保留Checkpoint</code></p>

<p>默认情况下，Checkpoint仅用于恢复失败的作业，是不保留的，程序结束时Checkpoints也会被删除。然而，你可以配置周期性的保留checkpoint。当作业失败或被取消时，这些checkpoints将不会被自动清除。这样，你就可以用该checkpoint来恢复失败的作业。</p>

<pre><code class="language-java">
CheckpointConfig config = env.getCheckpointConfig();
config.enableExternalizedCheckpoints(ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION);
</code></pre>

<p>“ExternalizedCheckpointCleanup”配置项定义了当作业取消时，对作业checkpoints的操作：</p>

<ul>
  <li>ExternalizedCheckpointCleanup.RETAIN_ON_CANCELLATION: 作业取消时，保留作业的checkpoint。注意，这种情况下，需要手动清除该作业的checkpoint。</li>
  <li>ExternalizedCheckpointCleanup.DELETE_ON_CANCELLATION: 作业取消时，删除作业的checkpoint。仅当作业失败时，作业的checkpoint才会被使用。</li>
</ul>

<p><code>目录结构</code></p>

<p>与 savepoints 类似， checkpoint由元数据文件、额外的数据文件（与state backend相关）组成。可以通过配置文件中“state.checkpoints.dir”配置项，指定元数据文件和数据文件的存储路径，也可以在代码中针对单个作业指定该配置。</p>

<ul>
  <li>通过配置文件全局配置</li>
</ul>

<pre><code class="language-shell">state.checkpoints.dir: hdfs:///checkpoints/
</code></pre>
<p>创建state backend时对单个作业进行配置#</p>

<pre><code class="language-java">env.setStateBackend(new RocksDBStateBackend("hdfs:///checkpoints-data/");
</code></pre>

<p><code>checkpoint与savepoint的区别</code></p>

<p>checkpoint与savepoint有一些区别。 他们</p>

<p>-的数据格式与state backend密切相关，可能以增量方式存储。</p>
<ul>
  <li>不支持Flink的特殊功能，如扩缩容。
<code>从checkpoint中恢复状态</code></li>
</ul>

<p>同savepoint一样，作业也可以使用checkpoint的元数据文件进行错误恢复。注意若元数据文件中信息不够，那么jobmanager就需要使用相关的数据文件来恢复作业。</p>
<pre><code class="language-shell">$ bin/flink run -s :checkpointMetaDataPath [:runArgs]
</code></pre>

<hr />

<h2 id="6-savepoint">6. <a name="Savepoint"></a>Savepoint</h2>

<blockquote>
  <p>Savepoints是存储在外部文件系统的的自完备的checkpoints，可以用来停止-恢复或升级Flink程序。其使用Flink的 checkpoint机制 创建流作业的全量（非增量）状态快照，并且将checkpoint数据和元数据写出到外部文件系统。</p>
</blockquote>

<p><code>分配算子ID</code></p>

<p><strong>墙裂推荐</strong>   通过“uid(String)”手动指定算子ID。这些ID将在确定每个算子的状态时使用。</p>

<pre><code class="language-java"> DataStream &lt;String&gt; stream = env.
  // Stateful source (e.g. Kafka) with ID
  .addSource(new StatefulSource())
  .uid("source-id") // ID for the source operator
  .shuffle()
  // Stateful mapper with ID
  .map(new StatefulMapper())
  .uid("mapper-id") // ID for the mapper
  // Stateless printing sink
  .print(); // Auto-generated ID
</code></pre>

<p>如果不手动指定算子ID，ID将自动生成。只要这些ID不改变，就可以从savepoint中自动恢复状态。自动生成的ID依赖于程序的结构，并且非常容易受到程序变化的影响。因此，墙裂推荐手动指定ID。</p>

<p><code>Savepoint状态</code></p>

<p>你可以将savepoint想象成为保存了每个有状态的算子的“算子ID-&gt;状态”映射的集合。</p>
<pre><code>Operator ID | State
------------+------------------------
source-id   | State of StatefulSource
mapper-id   | State of StatefulMapper
</code></pre>
<p>在上述示例中，print结果表是无状态的，因此不是savepoint状态的一部分。默认情况下，我们试图将savepoint的每条数据，都映射到新的程序中。</p>

<h1 id="stream-processing-fundamentals">stream processing fundamentals</h1>

<h1 id="architecture-of-apache-flink">architecture of Apache Flink</h1>

<blockquote>
  <p>为什么 Flink 能同时支持批处理和流处理呢？
Flink将批处理（即静态和有限数据集合的处理）视为流处理的一种特例。</p>
</blockquote>

<p>Flink 是一个分层设计的系统。栈中的不同层次构建在彼此之上，并提供不同的抽象级别的功能。</p>

<p>从下至上：</p>

<ul>
  <li>Runtime 层以 JobGraph 形式接收程序。JobGraph 即为一个一般化的并行有向无环数据流图（data flow），它拥有任意数量的 Task 来接收和产生 DataStream。</li>
  <li>DataStream API 和 DataSet API 都会使用单独编译的方式生成JobGraph。 DataSet API 使用 optimizer 来决定针对程序的优化方法，而 DataStream API 则使用 stream builder 来完成该任务。</li>
  <li>在执行JobGraph时，Flink提供了多种候选部署方案（如local，remote，YARN，云端部署等）。</li>
  <li>Flink 附随了一些产生 DataSet 或 DataStream API 程序的的类库和 API ：处理逻辑表查询的Table，机器学习的FlinkML，图像处理的Gelly，复杂事件处理的CEP等。</li>
</ul>

<p><img src="./../assets/img/component-stack.png" alt="" /></p>

<p><code>Runtime</code></p>

<p>标识为“Runtime”的是Flink的分布式运行环境，是Flink核心计算结构系统，它接受流数据流程序并在一台或多台机器中以容错方式执行它们。</p>

<ul>
  <li>Rumtime 接受的程序非常强大，但是直接基于它编程很困难。出于这个原因，Flink提供了开发人员友好的 API ，这些 API 在 Rumtime 层之上进行分层并生成这些流数据流程序。有用于流处理的 DataStream API 和用于批处理的 DataSet API 。值得注意的是，虽然Flink的运行时总是基于流，但 DataSet API 早于 DataStream API ，因为处理无限流的行业需求在第一个Flink年代并没有那么广泛。</li>
</ul>

<p><img src="./../assets/img/core-job-design.png" alt="" /></p>

<h1 id="架构演化">架构演化</h1>

<h2 id="7-time">7. <a name="time-1"></a><code>time</code></h2>

<p>Flink 在流程序中支持不同的 Time 概念</p>
<ul>
  <li>Processing Time</li>
  <li>Event Time</li>
  <li>Ingestion Time</li>
</ul>

<p>下面我们一起来看看这几个 Time：</p>

<p><code>Processing Time</code></p>

<blockquote>
  <p>Processing Time 是指事件被处理时机器的系统时间。</p>
</blockquote>

<p>当流程序在 Processing Time 上运行时，所有基于时间的操作(如时间窗口)将使用当时机器的系统时间。每小时 Processing Time 窗口将包括在系统时钟指示整个小时之间到达特定操作的所有事件。</p>

<p>例如，如果应用程序在上午 9:15 开始运行，则第一个每小时 Processing Time 窗口将包括在上午 9:15 到上午 10:00 之间处理的事件，下一个窗口将包括在上午 10:00 到 11:00 之间处理的事件。</p>

<p>Processing Time 是最简单的 “Time” 概念，不需要流和机器之间的协调，它提供了最好的性能和最低的延迟。但是，在分布式和异步的环境下，Processing Time 不能提供确定性，因为它容易受到事件到达系统的速度（例如从消息队列）、事件在系统内操作流动的速度以及中断的影响。</p>

<p><code>Event Time</code></p>

<blockquote>
  <p>Event Time 是事件发生的时间，一般就是数据本身携带的时间。这个时间通常是在事件到达 Flink 之前就确定的，并且可以从每个事件中获取到事件时间戳。在 Event Time 中，时间取决于数据，而跟其他没什么关系。Event Time 程序必须指定如何生成 Event Time 水印(Watermark)，这是表示 Event Time 进度的机制。</p>
</blockquote>

<p>在按业务发生时间统计数据时，面临一个问题，当接收数据的时间是无序的时候，我们什么时间去触发聚合计算，不可能无限制的等待。Flink引入了Watermark的概念，它是给窗口看的，是告诉窗口最长等待的时间是多久，超过这个时间的数据就抛弃不再处理。</p>

<p>完美的说，无论事件什么时候到达或者其怎么排序，最后处理 Event Time 将产生完全一致和确定的结果。但是，除非事件按照已知顺序（按照事件的时间）到达，否则处理 Event Time 时将会因为要等待一些无序事件而产生一些延迟。由于只能等待一段有限的时间，因此就难以保证处理 Event Time 将产生完全一致和确定的结果。</p>

<p>假设所有数据都已到达， Event Time 操作将按照预期运行，即使在处理无序事件、延迟事件、重新处理历史数据时也会产生正确且一致的结果。 例如，每小时事件时间窗口将包含带有落入该小时的事件时间戳的所有记录，无论它们到达的顺序如何。</p>

<p>请注意，有时当 Event Time 程序实时处理实时数据时，它们将使用一些 Processing Time 操作，以确保它们及时进行。</p>

<p><code>Ingestion Time</code></p>

<blockquote>
  <p>Ingestion Time 是事件进入 Flink 的时间。 在源操作处，每个事件将源的当前时间作为时间戳，并且基于时间的操作（如时间窗口）会利用这个时间戳。</p>
</blockquote>

<p>Ingestion Time 在概念上位于 Event Time 和 Processing Time 之间。 与 Processing Time 相比，它稍微贵一些，但结果更可预测。因为 Ingestion Time 使用稳定的时间戳（在源处分配一次），所以对事件的不同窗口操作将引用相同的时间戳，而在 Processing Time 中，每个窗口操作符可以将事件分配给不同的窗口（基于机器系统时间和到达延迟）。</p>

<p>与 Event Time 相比，Ingestion Time 程序无法处理任何无序事件或延迟数据，但程序不必指定如何生成水印。</p>

<p>在 Flink 中，Ingestion Time 与 Event Time 非常相似，但 Ingestion Time 具有自动分配时间戳和自动生成水印功能。</p>

<p><code>Event Time 和 Watermarks</code></p>

<blockquote>
  <p>支持 Event Time 的流处理器需要一种方法来衡量 Event Time 的进度。 例如，当 Event Time 超过一小时结束时，需要通知构建每小时窗口的窗口操作符，以便操作员可以关闭正在进行的窗口。</p>
</blockquote>

<p>Event Time 可以独立于 Processing Time 进行。 例如，在一个程序中，操作员的当前 Event Time 可能略微落后于 Processing Time （考虑到接收事件的延迟），而两者都以相同的速度进行。另一方面，另一个流程序可能只需要几秒钟的时间就可以处理完 Kafka Topic 中数周的 Event Time 数据。</p>

<p>Flink 中用于衡量 Event Time 进度的机制是 Watermarks。 Watermarks 作为数据流的一部分流动并带有时间戳 t。 Watermark（t）声明 Event Time 已到达该流中的时间 t，这意味着流中不应再有具有时间戳 t’&lt;= t 的元素（即时间戳大于或等于水印的事件）</p>

<p>下图显示了带有(逻辑)时间戳和内联水印的事件流。在本例中，事件是按顺序排列的(相对于它们的时间戳)，这意味着水印只是流中的周期性标记。</p>

<h2 id="8-window">8. <a name="window-1"></a><code>window</code></h2>

<blockquote>
  <p>Window 就是用来对一个无限的流设置一个有限的集合，在有界的数据集上进行操作的一种机制。</p>
</blockquote>

<p>Window 又可以分为</p>

<ul>
  <li>基于时间（Time-based）的 window</li>
  <li>基于数量（Count-based）的 window</li>
</ul>

<p><code>time-based </code> window</p>

<blockquote>
  <p>Time Windows 根据时间来聚合流数据。例如：一分钟的 tumbling time window 收集一分钟的元素，并在一分钟过后对窗口中的所有元素应用于一个函数。</p>
</blockquote>

<ul>
  <li>tumbling time windows(翻滚时间窗口)</li>
  <li>sliding time windows(滑动时间窗口)</li>
</ul>

<p>tumbling time windows</p>

<pre><code class="language-java"> DataStream .keyBy(1)
    .timeWindow(Time.minutes(1)) //tumbling time window 每分钟统计一次数量和
    .sum(1);
</code></pre>

<p>sliding time windows
输入两个时间参数</p>

<pre><code class="language-java"> DataStream .keyBy(1)
	.timeWindow(Time.minutes(1), Time.seconds(30)) //sliding time window 每隔 30s 统计过去1分钟的数量和
	.sum(1);
</code></pre>

<p><code>Count-based</code> window</p>

<blockquote>
  <p>Apache Flink 还提供计数窗口功能。如果计数窗口设置的为 100 ，那么将会在窗口中收集 100 个事件，并在添加第 100 个元素时计算窗口的值。</p>
</blockquote>

<ul>
  <li>tumbling count window</li>
  <li>sliding count window</li>
</ul>

<p>tumbling count window
输入一个时间参数</p>

<pre><code class="language-java">data.keyBy(1)
	.countWindow(100) //统计每 100 个元素的数量之和
	.sum(1);
</code></pre>

<p>sliding count window</p>

<p>输入两个时间参数</p>

<pre><code class="language-java">data.keyBy(1)
	.countWindow(100, 10) //每 10 个元素统计过去 100 个元素的数量之和
	.sum(1);
</code></pre>
<h1 id="开发环境准备相关">开发环境准备相关</h1>

<p>一个好的 IDE 不仅能有效的提高开发者的开发效率，而且对于不做代码开发但是希望通过代码学 习 Flink 的人来说，也非常有助于其对代码的理解。
推荐使用 IntelliJ IDEA IDE 作为 Flink 的 IDE 工具。
官方的说法是，不建议使用 Eclipse IDE，主 要原因是 Eclipse 的 Scala IDE 和 Flink 用 scala 的不兼容。</p>

<h3 id="安装-scala-plugin">安装 Scala plugin</h3>
<p>Flink 项目使用了 Java 和 Scala 开发，Intellij 自带 Java 的支持，在导入 Flink 代码前，还需要确 保安装 Intellij 的 Scala plugin。安装方法如下:</p>
<ol>
  <li>IntelliJ IDEA -&gt; Preferences -&gt; Plugins，点击“Install Jetbrains plugin…”</li>
  <li>搜索“scala”，点击“install”</li>
  <li>重启 Intellij</li>
</ol>

<h3 id="添加-java-的-checkstyle">添加 Java 的 Checkstyle</h3>
<p>在 Intellij 中添加 Checkstyle 是很重要的，因为 Flink 在编译时会强制代码风格的检查，如果代码 风格不符合规范，可能会直接编译失败。对于需要在开源代码基础上做二次开发的同学，或者有 志于向社区贡献代码的同学来说，及早添加 checkstyle 并注意代码规范，能帮你节省不必要的修 改代码格式的时间。
Intellij 内置对 Checkstyle 的支持，可以检查一下 Checkstyle-IDEA plugin 是否安装(IntelliJ IDEA -&gt; Preferences -&gt; Plugins，搜索“Checkstyle-IDEA”)。
配置 Java Checkstyle:</p>
<ol>
  <li>IntelliJ IDEA -&gt; Preferences -&gt; Other Settings -&gt; Checkstyle</li>
  <li>设置 “Scan Scope”为“Only Java sources (including tests)”</li>
  <li>在“Checkstyle Version”下拉框中选择“8.9”</li>
  <li>
    <p>在“Configuration File”中点击“+”新增一个 flink 的配置:
a. “Description”填“Flink”
b. “Use a local Checkstyle file”选择本代码下的 tools/maven/checkstyle.xml 文件
c. 勾选“Store relative to project location”，然后点击“Next”
d. 配置“checkstyle.suppressions.file” 的值为”suppressions.xml”，然后点击“Next”和
“Finish”
e. 勾选上“Flink”作为唯一生效的 checkstyle 配置，点击“Apply”和“OK”</p>
  </li>
  <li>IntelliJ IDEA -&gt; Preferences -&gt; Editor -&gt; Code Style -&gt; Java，点击
⚙齿轮按钮，选择 “Import Scheme” -&gt; “Checkstyle Configuration”，选择 checkstyle.xml 文件。这样配置后，
 Intellij 在自动 import 的时候会按照规则，把 import 代码添加到正确的位置。
需要说明的是，Flink 中的一些模块并不能完全 checkstyle 通过，包括 flink-core、flink-optimizer 和 flink-runtime。但无论如何，还是应当保证你新增或修改的代码遵守 checkstyle 的规范。
    <h3 id="添加-scala-的-checkstyle">添加 Scala 的 Checkstyle</h3>
  </li>
  <li>将“tools/maven/scalastyle-config.xml”文件拷贝到 flink 代码根目录的“.idea”子目录中</li>
  <li>IntelliJ IDEA -&gt; Preferences -&gt; Editor -&gt; Inspections，搜索“Scala style inspections”，勾选这一项</li>
</ol>

	  ]]></description>
	</item>

	<item>
	  <title>I Have a To Do</title>
	  <link>/2018-03-05-to-do/</link>
	  <author></author>
	  <pubDate>2018-03-05T18:18:00+08:00</pubDate>
	  <guid>/2018-03-05-to-do/</guid>
	  <description><![CDATA[
	     <h1 id="目录">目录</h1>

<ul>
  <li><a href="#param-and-attribute">param and attribute</a></li>
  <li><a href="#to-do-list">Get the things done</a></li>
</ul>

<hr />

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby">def foo
  puts &#39;foo&#39;
end</code></pre></figure>

<hr />

<p>入职手续准备
遗留问题研究</p>

<p>敬慎</p>
<ul>
  <li>高而能下，</li>
  <li>满而能虚，</li>
  <li>富而能俭，</li>
  <li>贵而能卑，</li>
  <li>智而能愚，</li>
  <li>勇而能怯，</li>
  <li>辩而能讷，</li>
  <li>博而能浅，</li>
  <li>明而能闇，</li>
  <li>是谓损而不极。</li>
  <li>能行此道，唯至德者及之。</li>
</ul>

<h3 id="各种集合的-遍历性能对比">各种集合的 遍历性能对比</h3>

<p>可以在 github 上 开一个
先想想怎么测试</p>

<ul>
  <li>数据量
    <ul>
      <li>基本类型</li>
      <li>对象</li>
      <li>大对象</li>
    </ul>
  </li>
  <li>测试对象
    <ul>
      <li>list
        <ul>
          <li>arrayList</li>
          <li>linkedList</li>
          <li></li>
        </ul>
      </li>
      <li>map</li>
      <li>set</li>
      <li>vector</li>
    </ul>
  </li>
</ul>

<h3 id="to-do-listdo-to-list">to do list(do to list)</h3>
<ul>
  <li>spring 画面验证
    <ul>
      <li>Valid</li>
      <li>Validated 区别验证</li>
    </ul>
  </li>
  <li>
    <p>Annotation 会覆盖嘛？</p>
  </li>
  <li>db
    <ul>
      <li>redis</li>
      <li>mybatis generator</li>
      <li>mybatis 二级缓存</li>
    </ul>
  </li>
</ul>

<h3 id="异常处理最佳实践">异常处理最佳实践</h3>
<p><code>根据我的工作经历来看，我主要遵循以下几点：</code>
    1. 尽量不要在代码中写try…catch.finally把异常吃掉。
    2. 异常要尽量直观，防止被他人误解
    3. 将异常分为以下几类,业务异常，登录状态无效异常，（虽已登录，且状态有效）未授权异常，系统异常（JDK中定义Error和Exception，比如NullPointerException, ArithmeticException 和 InputMismatchException）
    4. 可以在某个特定的Controller中处理异常，也可以使用全局异常处理器。尽量使用全局异常处理器</p>

<ul>
  <li>spring
    <ul>
      <li>controller</li>
      <li>validator</li>
      <li>command</li>
      <li>form</li>
      <li>model</li>
      <li>dispatcherServlet</li>
      <li>handler mapping</li>
      <li>view resolver</li>
    </ul>
  </li>
</ul>

<hr />

<p>WebApplicationContext</p>

<table>
  <thead>
    <tr>
      <th>No</th>
      <th>Bean Type</th>
      <th>Explanation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td>HandlerMapping</td>
      <td>Maps incoming requests to handlers and a list of pre- and post-processors (handler interceptors) based on some criteria the details of which vary by HandlerMapping implementation. The most popular implementation supports annotated controllers but other implementations exists as well.</td>
    </tr>
    <tr>
      <td>2</td>
      <td>HandlerAdapter</td>
      <td>Helps the DispatcherServlet to invoke a handler mapped to a request regardless of the handler is actually invoked. For example, invoking an annotated controller requires resolving various annotations. Thus the main purpose of a HandlerAdapter is to shield the DispatcherServlet from such details.</td>
    </tr>
    <tr>
      <td>3</td>
      <td>HandlerExceptionResolver</td>
      <td>Maps exceptions to views also allowing for more complex exception handling code.</td>
    </tr>
    <tr>
      <td>4</td>
      <td>ViewResolver</td>
      <td>Resolves logical String-based view names to actual View types.</td>
    </tr>
    <tr>
      <td>5</td>
      <td>LocaleResolver &amp; LocaleContextResolver</td>
      <td>Resolves the locale a client is using and possibly their time zone, in order to be able to offer internationalized views</td>
    </tr>
    <tr>
      <td>6</td>
      <td>ThemeResolver</td>
      <td>Resolves themes your web application can use, for example, to offer personalized layouts</td>
    </tr>
    <tr>
      <td>7</td>
      <td>MultipartResolver</td>
      <td>Parses multi-part requests for example to support processing file uploads from HTML forms.</td>
    </tr>
    <tr>
      <td>8</td>
      <td>FlashMapManager</td>
      <td>Stores and retrieves the “input” and the “output” FlashMap that can be used to pass attributes from one request to another, usually across a redirect.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="request-中-parameter-与-attribute-的区别param-and-attribute">request 中 parameter 与 attribute 的区别(param and attribute)</h3>
<ul>
  <li>不同点
    <ul>
      <li>来源：param 为 客户端发送给服务端的参数 而 attribute 是服务端设置的 属性</li>
      <li>操作：param 只能读取，不能设置，而 attribute 能够被读写</li>
      <li>类型：param 作为参数，放在 get 方式的 url 中 post 方式的 request body 中，在服务端获取的时候，都会被当做 string 看待, 而 attribute 则可以存储任意的 object 对象</li>
    </ul>
  </li>
  <li>共同点
    <ul>
      <li>二者的值都被封装在request对象中。</li>
    </ul>
  </li>
</ul>

<h3 id="异常处理最佳实践-1">异常处理最佳实践</h3>

<h3 id="登陆">登陆</h3>

<h3 id="行程计划">行程计划</h3>

<ul>
  <li>插入</li>
  <li>更新</li>
  <li>查询</li>
  <li>分页</li>
  <li>流水记录</li>
  <li>流水查询</li>
  <li>流水能更新</li>
  <li>流水设计</li>
  <li>流水插入时点</li>
  <li>行程计划和流水查询的相关功能点， 哪里需要拉计划和流水，找出来</li>
</ul>

<h4 id="ide运行">IDE运行</h4>

<p>因为程序本身按照Docker启动，所以对于hostname需要在hosts文件中设置正确才能正常运行：</p>

<pre><code class="language-shell">## solar
127.0.0.1 eureka1
127.0.0.1 eureka2
127.0.0.1 rabbitmq
127.0.0.1 zipkin_server
127.0.0.1 solar_mysql
127.0.0.1 gitlab
</code></pre>

<p>根据依赖关系，程序最好按照以下的顺序执行</p>

<p>docker mysql &gt; docker rabbitmq &gt; eureka server &gt; config server &gt; zipkin server &gt; 其他业务微服务（account-ms, product-ms, order-ms, tcc-coordinator-ms等）</p>

<h2 id="示例">示例</h2>

<p>根据附表中的服务字典，我们通过Zuul或Swagge对<code>order</code>服务进行预订单生成操作。</p>

<pre><code class="language-http">POST http://localhost:7291/order/api/v1/orders
Content-Type: application/json;charset=UTF-8

{
  "product_id": 7,
  "user_id": 1
}
</code></pre>

<p>成功后我们将得到预订单的结果</p>

<pre><code class="language-json">{
  "data": {
    "id": 15,
    "create_time": "2017-03-28T18:18:02.206+08:00",
    "update_time": "1970-01-01T00:00:00+08:00",
    "delete_time": "1970-01-01T00:00:00+08:00",
    "user_id": 1,
    "product_id": 7,
    "price": 14,
    "status": "PROCESSING"
  },
  "code": 20000
}
</code></pre>

<p>此时我们再确认订单</p>

<p>(如果想测试预留资源的补偿情况，那么就等15s后过期再发请求，注意容器与宿主机的时间)</p>

<pre><code>POST http://localhost:7291/order/api/v1/orders/confirmation
Content-Type: application/json;charset=UTF-8

{
  "order_id": 15
}
</code></pre>

<p>如果成功确认则返回如下结果</p>

<pre><code class="language-json">{
  "data": {
    "id": 15,
    "create_time": "2017-03-28T18:18:02.206+08:00",
    "update_time": "2017-03-28T18:21:32.78+08:00",
    "delete_time": "1970-01-01T00:00:00+08:00",
    "user_id": 1,
    "product_id": 7,
    "price": 14,
    "status": "DONE"
  },
  "code": 20000
}
</code></pre>

<pre><code class="language-java">public class RPCProtocol implements Protocol {
	
	public static final int TYPE = 1;
	
	private static final Log LOGGER = LogFactory.getLog(RPCProtocol.class);
	
	private static final int REQUEST_HEADER_LEN = 1 * 6 + 5 * 4;
	
	private static final int RESPONSE_HEADER_LEN = 1 * 6 + 3 * 4;
	
	private static final byte VERSION = (byte)1;
	
	private static final byte REQUEST = (byte)0;
	
	private static final byte RESPONSE = (byte)1;
	
	@Override
	public ByteBufferWrapper encode(Object message, ByteBufferWrapper bytebufferWrapper) throws Exception{
		if(!(message instanceof RequestWrapper) &amp;&amp; !(message instanceof ResponseWrapper)){
			throw new Exception("only support send RequestWrapper &amp;&amp; ResponseWrapper");
		}
		int id = 0;
		byte type = REQUEST;
		if(message instanceof RequestWrapper){
			try{
				int requestArgTypesLen = 0;
				int requestArgsLen = 0;
				List&lt;byte[]&gt; requestArgTypes = new ArrayList&lt;byte[]&gt;();
				List&lt;byte[]&gt; requestArgs = new ArrayList&lt;byte[]&gt;();
				RequestWrapper wrapper = (RequestWrapper) message;
				byte[][] requestArgTypeStrings = wrapper.getArgTypes();
				for (byte[] requestArgType : requestArgTypeStrings) {
					requestArgTypes.add(requestArgType);
					requestArgTypesLen += requestArgType.length;
				}
				Object[] requestObjects = wrapper.getRequestObjects();
				if(requestObjects!=null){
					for (Object requestArg : requestObjects) {
						byte[] requestArgByte = Codecs.getEncoder(wrapper.getCodecType()).encode(requestArg);
						requestArgs.add(requestArgByte);
						requestArgsLen += requestArgByte.length;
					}
				}
				byte[] targetInstanceNameByte = wrapper.getTargetInstanceName();
				byte[] methodNameByte = wrapper.getMethodName();
				id = wrapper.getId();
				int timeout = wrapper.getTimeout();
				int capacity = ProtocolUtils.HEADER_LEN + REQUEST_HEADER_LEN + requestArgs.size() * 4 * 2 + targetInstanceNameByte.length 
							   + methodNameByte.length + requestArgTypesLen + requestArgsLen;
				ByteBufferWrapper byteBuffer = bytebufferWrapper.get(capacity);
				byteBuffer.writeByte(ProtocolUtils.CURRENT_VERSION);
				byteBuffer.writeByte((byte)TYPE);
				byteBuffer.writeByte(VERSION);
				byteBuffer.writeByte(type);
				byteBuffer.writeByte((byte)wrapper.getCodecType());
				byteBuffer.writeByte((byte)0);
				byteBuffer.writeByte((byte)0);
				byteBuffer.writeByte((byte)0);
				byteBuffer.writeInt(id);
				byteBuffer.writeInt(timeout);
				byteBuffer.writeInt(targetInstanceNameByte.length);
				byteBuffer.writeInt(methodNameByte.length);
				byteBuffer.writeInt(requestArgs.size());
				for (byte[] requestArgType : requestArgTypes) {
					byteBuffer.writeInt(requestArgType.length);
				}
				for (byte[] requestArg : requestArgs) {
					byteBuffer.writeInt(requestArg.length);
				}
				byteBuffer.writeBytes(targetInstanceNameByte);
				byteBuffer.writeBytes(methodNameByte);
				for (byte[] requestArgType : requestArgTypes) {
					byteBuffer.writeBytes(requestArgType);
				}
				for (byte[] requestArg : requestArgs) {
					byteBuffer.writeBytes(requestArg);
				}
				return byteBuffer;
			}
			catch(Exception e){
				LOGGER.error("encode request object error",e);
				throw e;
			}
		}
		else{
			ResponseWrapper wrapper = (ResponseWrapper) message;
			byte[] body = new byte[0];
			byte[] className = new byte[0];
			try{
				// no return object
				if(wrapper.getResponse() != null){
					className = wrapper.getResponse().getClass().getName().getBytes();
					body = Codecs.getEncoder(wrapper.getCodecType()).encode(wrapper.getResponse());
				}
				if(wrapper.isError()){
					className = wrapper.getException().getClass().getName().getBytes();
					body = Codecs.getEncoder(wrapper.getCodecType()).encode(wrapper.getException());
				}
				id = wrapper.getRequestId();
			}
			catch(Exception e){
				LOGGER.error("encode response object error", e);
				// still create responsewrapper,so client can get exception
				wrapper.setResponse(new Exception("serialize response object error",e));
				className = Exception.class.getName().getBytes();
				body = Codecs.getEncoder(wrapper.getCodecType()).encode(wrapper.getResponse());
			}
			type = RESPONSE;
			int capacity = ProtocolUtils.HEADER_LEN + RESPONSE_HEADER_LEN + body.length;
			if(wrapper.getCodecType() == Codecs.PB_CODEC){
				capacity += className.length;
			}
			ByteBufferWrapper byteBuffer = bytebufferWrapper.get(capacity);
			byteBuffer.writeByte(ProtocolUtils.CURRENT_VERSION);
			byteBuffer.writeByte((byte)TYPE);
			byteBuffer.writeByte(VERSION);
			byteBuffer.writeByte(type);
			byteBuffer.writeByte((byte)wrapper.getCodecType());
			byteBuffer.writeByte((byte)0);
			byteBuffer.writeByte((byte)0);
			byteBuffer.writeByte((byte)0);
			byteBuffer.writeInt(id);
			if(wrapper.getCodecType() == Codecs.PB_CODEC){
				byteBuffer.writeInt(className.length);
			}
			else{
				byteBuffer.writeInt(0);
			}
			byteBuffer.writeInt(body.length);
			if(wrapper.getCodecType() == Codecs.PB_CODEC){
				byteBuffer.writeBytes(className);
			}
			byteBuffer.writeBytes(body);
			return byteBuffer;
		}
	}
	
	public Object decode(ByteBufferWrapper wrapper,Object errorObject,int...originPosArray) throws Exception{
		final int originPos;
		if(originPosArray!=null &amp;&amp; originPosArray.length == 1){
			originPos = originPosArray[0];
		}
		else{
			originPos = wrapper.readerIndex();
		}
		if(wrapper.readableBytes() &lt; 2){
			wrapper.setReaderIndex(originPos);
        	return errorObject;
        }
        byte version = wrapper.readByte();
        if(version == (byte)1){
        	byte type = wrapper.readByte();
        	if(type == REQUEST){
        		if(wrapper.readableBytes() &lt; REQUEST_HEADER_LEN -2){
        			wrapper.setReaderIndex(originPos);
        			return errorObject;
        		}
        		int codecType = wrapper.readByte();
        		wrapper.readByte();
        		wrapper.readByte();
        		wrapper.readByte();
        		int requestId = wrapper.readInt();
        		int timeout = wrapper.readInt();
        		int targetInstanceLen = wrapper.readInt();
        		int methodNameLen = wrapper.readInt();
        		int argsCount = wrapper.readInt();
        		int argInfosLen = argsCount * 4 * 2;
        		int expectedLenInfoLen = argInfosLen + targetInstanceLen + methodNameLen;
        		if(wrapper.readableBytes() &lt; expectedLenInfoLen){
        			wrapper.setReaderIndex(originPos);
        			return errorObject;
        		}
        		int expectedLen = 0;
        		int[] argsTypeLen = new int[argsCount];
        		for (int i = 0; i &lt; argsCount; i++) {
					argsTypeLen[i] = wrapper.readInt();
					expectedLen += argsTypeLen[i]; 
				}
        		int[] argsLen = new int[argsCount];
        		for (int i = 0; i &lt; argsCount; i++) {
        			argsLen[i] = wrapper.readInt();
        			expectedLen += argsLen[i];
				}
        		byte[] targetInstanceByte = new byte[targetInstanceLen];
        		wrapper.readBytes(targetInstanceByte);
        		byte[] methodNameByte = new byte[methodNameLen];
        		wrapper.readBytes(methodNameByte);
        		if(wrapper.readableBytes() &lt; expectedLen){
        			wrapper.setReaderIndex(originPos);
        			return errorObject;
        		}
        		byte[][] argTypes = new byte[argsCount][];
        		for (int i = 0; i &lt; argsCount; i++) {
					byte[] argTypeByte = new byte[argsTypeLen[i]];
					wrapper.readBytes(argTypeByte);
					argTypes[i] = argTypeByte;
				}
        		Object[] args = new Object[argsCount];
        		for (int i = 0; i &lt; argsCount; i++) {
					byte[] argByte = new byte[argsLen[i]];
					wrapper.readBytes(argByte);
					args[i] = argByte;
				}
        		RequestWrapper requestWrapper = new RequestWrapper(targetInstanceByte, methodNameByte, 
        														   argTypes, args, timeout, requestId, codecType, TYPE);
        		int messageLen = ProtocolUtils.HEADER_LEN + REQUEST_HEADER_LEN + expectedLenInfoLen + expectedLen;
        		requestWrapper.setMessageLen(messageLen);
        		return requestWrapper;
        	}
        	else if(type == RESPONSE){
        		if(wrapper.readableBytes() &lt; RESPONSE_HEADER_LEN -2){
        			wrapper.setReaderIndex(originPos);
        			return errorObject;
        		}
        		int codecType = wrapper.readByte();
        		wrapper.readByte();
        		wrapper.readByte();
        		wrapper.readByte();
            	int requestId = wrapper.readInt();
            	int classNameLen = wrapper.readInt();
            	int bodyLen = wrapper.readInt();
            	if(wrapper.readableBytes() &lt; classNameLen + bodyLen){
            		wrapper.setReaderIndex(originPos);
            		return errorObject;
            	}

            	byte[] classNameBytes = null;
            	if(codecType == Codecs.PB_CODEC){	
	            	classNameBytes = new byte[classNameLen];
	            	wrapper.readBytes(classNameBytes);
            	}
            	byte[] bodyBytes = new byte[bodyLen];
            	wrapper.readBytes(bodyBytes);
            	ResponseWrapper responseWrapper = new ResponseWrapper(requestId,codecType,TYPE);
            	responseWrapper.setResponse(bodyBytes);
            	responseWrapper.setResponseClassName(classNameBytes);
	        	int messageLen = ProtocolUtils.HEADER_LEN + RESPONSE_HEADER_LEN + classNameLen + bodyLen;
	        	responseWrapper.setMessageLen(messageLen);
            	return responseWrapper;
        	}
        	else{
        		throw new UnsupportedOperationException("protocol type : "+type+" is not supported!");
        	}
        }
        else{
        	throw new UnsupportedOperationException("protocol version :"+version+" is not supported!");
        }
	}

}
</code></pre>

<p>至此就完成了一次TCC事务，当然你也可以测试超时和冲突的情况，这里就不再赘述。</p>

<h2 id="拓展">拓展</h2>

<h3 id="使用gitlab作为远程配置仓库">使用Gitlab作为远程配置仓库</h3>

<p>本例中默认使用Github或GitOsc中的公开仓库，出于自定义的需要，我们可以在本地构建Git仓库，这里选用Gitlab为例。</p>

<p>将以下配置添加至docker compose中的文件中并启动Docker Gitlab容器：</p>

<pre><code class="language-yaml">gitlab:
    image: daocloud.io/daocloud/gitlab:8.16.7-ce.0
    ports:
        - "10222:22"
        - "80:80"
        - "10443:443"
    volumes:
        - "./docker-gitlab/config/:/etc/gitlab/"
        - "./docker-gitlab/logs/:/var/log/gitlab/"
        - "./docker-gitlab/data/:/var/opt/gitlab/"
    environment:
        - TZ=Asia/Shanghai
</code></pre>

<p>将项目的<code>config-repo</code>添加至Gitlab中，并修改<code>config-ms</code>中git仓库的相关验证等参数即可。</p>

<p><img src="./../assets/images/cover3.jpg" alt="" /></p>

<h2 id="服务字典">服务字典</h2>

<p>鉴于Spring Boot Actuator的端点所带来的两面性，除了可以增加<code>spring-boot-starter-security</code>来获得强度较弱的HTTP Basic认证外，我们还可以修改<code>management.port</code>和<code>management.context-path</code>来提高攻击成本. 是的，我对每一个服务都修改了以上两个属性，并且兼容了Eureka Server，Hystrix Dashboard，Spring Boot Admin，使这些监控服务仍能正确工作. 因为对以上两个参数修改，我们的监控路径有所变化，如下表：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">module name</th>
      <th style="text-align: center">docker compose service name</th>
      <th style="text-align: center">application name</th>
      <th style="text-align: center">server port</th>
      <th style="text-align: center">management port</th>
      <th style="text-align: center">management context path</th>
      <th style="text-align: center">scalable</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">account-ms</td>
      <td style="text-align: center">account</td>
      <td style="text-align: center">account</td>
      <td style="text-align: center">10014</td>
      <td style="text-align: center">10248</td>
      <td style="text-align: center"><strong>/78d504ff-82e8-4a87-82e8-724d72d1171b</strong></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">api-gateway-ms</td>
      <td style="text-align: center">gateway</td>
      <td style="text-align: center">gateway</td>
      <td style="text-align: center">7291</td>
      <td style="text-align: center">10211</td>
      <td style="text-align: center">/fb83deee-dd46-472b-99a9-f0ebffe20d0e</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">config-ms</td>
      <td style="text-align: center">config_server</td>
      <td style="text-align: center">config-server</td>
      <td style="text-align: center">10888</td>
      <td style="text-align: center">10481</td>
      <td style="text-align: center">/f7597180-e480-400e-81a0-847c22e2e0b8</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">eureka-registry-ms-1</td>
      <td style="text-align: center">eureka1</td>
      <td style="text-align: center">registry</td>
      <td style="text-align: center">8763</td>
      <td style="text-align: center">9274</td>
      <td style="text-align: center">/55395018-70b7-47c3-8fef-5bf24c9da9af</td>
      <td style="text-align: center">×</td>
    </tr>
    <tr>
      <td style="text-align: center">eureka-registry-ms-2</td>
      <td style="text-align: center">eureka2</td>
      <td style="text-align: center">registry</td>
      <td style="text-align: center">8762</td>
      <td style="text-align: center">10177</td>
      <td style="text-align: center">/e5da837b-a575-4447-b037-100850226a11</td>
      <td style="text-align: center">×</td>
    </tr>
    <tr>
      <td style="text-align: center">hystrix-dashboard-ms</td>
      <td style="text-align: center">hystrix_dashboard</td>
      <td style="text-align: center">hystrix</td>
      <td style="text-align: center">8193</td>
      <td style="text-align: center">7104</td>
      <td style="text-align: center">/9511d89d-6488-4293-8df8-c4feb8681e83</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">membership-ms</td>
      <td style="text-align: center">membership</td>
      <td style="text-align: center">membership</td>
      <td style="text-align: center">10673</td>
      <td style="text-align: center">10391</td>
      <td style="text-align: center">/a6da3b6f-4b59-11e7-9226-0242ac130004</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">order-ms</td>
      <td style="text-align: center">order</td>
      <td style="text-align: center">order</td>
      <td style="text-align: center">8295</td>
      <td style="text-align: center">10848</td>
      <td style="text-align: center"><strong>/78d504ff-82e8-4a87-82e8-724d72d1171b</strong></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">product-ms</td>
      <td style="text-align: center">product</td>
      <td style="text-align: center">product</td>
      <td style="text-align: center">8040</td>
      <td style="text-align: center">10912</td>
      <td style="text-align: center"><strong>/78d504ff-82e8-4a87-82e8-724d72d1171b</strong></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">spring-boot-admin-ms</td>
      <td style="text-align: center">spring_boot_admin</td>
      <td style="text-align: center">spring-boot-admin</td>
      <td style="text-align: center">7020</td>
      <td style="text-align: center">9218</td>
      <td style="text-align: center">/e58a0ff5-9f60-4545-9aa2-2b91c8a6d53b</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">tcc-coordinator-ms</td>
      <td style="text-align: center">tcc_coordinator</td>
      <td style="text-align: center">tcc</td>
      <td style="text-align: center">11020</td>
      <td style="text-align: center">12841</td>
      <td style="text-align: center"><strong>/78d504ff-82e8-4a87-82e8-724d72d1171b</strong></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: center">zipkin-ms</td>
      <td style="text-align: center">zipkin_server</td>
      <td style="text-align: center">zipkin-server</td>
      <td style="text-align: center">9411</td>
      <td style="text-align: center">-</td>
      <td style="text-align: center">-</td>
      <td style="text-align: center">×</td>
    </tr>
  </tbody>
</table>

<h2 id="结语">结语</h2>


	  ]]></description>
	</item>

	<item>
	  <title>A Full and Comprehensive Style Test</title>
	  <link>/2014-09-27-a-full-and-comprehensive-style-test/</link>
	  <author></author>
	  <pubDate>2014-09-27T18:18:00+08:00</pubDate>
	  <guid>/2014-09-27-a-full-and-comprehensive-style-test/</guid>
	  <description><![CDATA[
	     <p>This is just an <em>ipsis verbis</em> copy of the first example running on the <a href="http://demo.ghost.io">Ghost Demo</a>. This shows how you can use html styling to achieve your hopes.</p>


<p>Below is just about everything you’ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.</p>


<hr />

<h1 id="heading1">Heading 1</h1>

<h2 id="heading2">Heading 2</h2>

<h3 id="heading3">Heading 3</h3>

<h4 id="heading4">Heading 4</h4>

<h5 id="heading5">Heading 5</h5>

<h6 id="heading6">Heading 6</h6>

<hr />

<p>Lorem ipsum dolor sit amet, <a title="test link" href="#">test link</a> adipiscing elit. <strong>This is strong.</strong> Nullam dignissim convallis est. Quisque aliquam. <em>This is emphasized.</em> Donec faucibus. Nunc iaculis suscipit dui. 5<sup>3</sup> = 125. Water is H<sub>2</sub>O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. <cite>The New York Times</cite> (That’s a citation). <span style="text-decoration:underline;">Underline.</span> Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.</p>

<p><abbr title="Hyper Text Markup Language">HTML</abbr> and <abbr title="Cascading Style Sheets">CSS</abbr> are our tools. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. To copy a file type <code>COPY <var>filename</var></code>. <del>Dinner’s at 5:00.</del> <ins>Let’s make that 7.</ins> This <span style="text-decoration:line-through;">text</span> has been struck.</p>

<hr />

<h2 id="media">Media</h2>

<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>

<h3 id="bigimage">Big Image</h3>

<p><img src="http://demo.ghost.io/content/images/2014/09/testimg1.jpeg" alt="Test Image" /></p>

<p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>

<h3 id="smallimage">Small Image</h3>

<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>

<p><img src="http://demo.ghost.io/content/images/2014/09/testimg2.jpg" alt="Small Test Image" /></p>

<p>Labore et dolore.</p>

<hr />

<h2 id="listtypes">List Types</h2>

<h3 id="definitionlist">Definition List</h3>

<dl>
<dt>Definition List Title</dt>
<dd>This is a definition list division.</dd>
<dt>Definition</dt>
<dd>An exact statement or description of the nature, scope, or meaning of something: <em>our definition of what constitutes poetry.</em></dd>
</dl>

<h3 id="orderedlist">Ordered List</h3>

<ol>
<li>List Item 1  </li>
<li>List Item 2 <br />
<ol><li>Nested list item A</li>
<li>Nested list item B</li></ol></li>
<li>List Item 3</li>
</ol>

<h3 id="unorderedlist">Unordered List</h3>

<ul>
<li>List Item 1</li>
<li>List Item 2
<ul><li>Nested list item A</li>
<li>Nested list item B</li></ul></li>
<li>List Item 3</li>
</ul>

<hr />

<h2 id="table">Table</h2>

<table>
<tbody>
<tr>
<th>Table Header 1</th>
<th>Table Header 2</th>
<th>Table Header 3</th>
</tr>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
<tr class="even">
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
</tbody>
</table>

<hr />

<h2 id="preformattedtext">Preformatted Text</h2>

<p>Typographically, preformatted text is not the same thing as code. Sometimes, a faithful execution of the text requires preformatted text that may not have anything to do with code. Most browsers use Courier and that’s a good default — with one slight adjustment, Courier 10 Pitch over regular Courier for Linux users.</p>

<h3 id="code">Code</h3>

<p>Code can be presented inline, like <code>&lt;?php bloginfo('stylesheet_url'); ?&gt;</code>, or within a <code>&lt;pre&gt;</code> block. Because we have more specific typographic needs for code, we’ll specify Consolas and Monaco ahead of the browser-defined monospace font.</p>

<p>Code blocks can also be inserted with the highlight tag as below:</p>
<pre>
    
    {% highlight language-x %}
    # some code
    {% endhighlight %}
    
</pre>

<p>More information about code highlighting in jekyll can be found  <a href="https://jekyllrb.com/docs/templates/#code-snippet-highlighting">in Jekyll documentation</a>.</p>

<p>These area a couple of examples showing the resulting highlighted code:</p>

<figure class="highlight"><pre><code class="language-css" data-lang="css">/* css code sample */
#container {
    float: left;
    margin: 0 -240px 0 0;
    width: 100%;
}</code></pre></figure>


<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript">// javascript code sample
$.ajax({
  type: &#39;POST&#39;,
  url: &#39;backend.php&#39;,
  data: &quot;q=&quot;+myform.serialize(),
  success: function(data){
    // on success use return data here
  },
  error: function(xhr, type, exception) {
    // if ajax fails display error alert
    alert(&quot;ajax error response type &quot;+type);
  }
});</code></pre></figure>

<p>Now you can also use <a href="https://highlightjs.org/">highlight.js</a>.
For more on how to use it and on the available styles check their
<a href="https://highlightjs.org/static/demo/">demo</a> and
<a href="http://highlightjs.readthedocs.org/en/latest/">documentation</a> pages.</p>

<div class="system">
<pre><code class="swift">// Swift code sample
import Foundation

@objc class Person: Entity {
  var name: String!
  var age:  Int!

  init(name: String, age: Int) {
    /* /* ... */ */
  }

  // Return a descriptive string for this person
  func description(offset: Int = 0) -> String {
    return "\(name) is \(age + offset) years old"
  }
}
</code></pre>
</div>


<hr />

<h2 id="blockquotes">Blockquotes</h2>

<p>Let’s keep it simple. Italics are good to help set it off from the body text. Be sure to style the citation.</p>

<blockquote>
  <p>Good afternoon, gentlemen. I am a HAL 9000 computer. I became operational at the H.A.L. plant in Urbana, Illinois on the 12th of January 1992. My instructor was Mr. Langley, and he taught me to sing a song. If you’d like to hear it I can sing it for you. <cite>— <a href="http://en.wikipedia.org/wiki/HAL_9000">HAL 9000</a></cite></p>
</blockquote>

<p>And here’s a bit of trailing text.</p>

<hr />

<h2 id="textlevelsemantics">Text-level semantics</h2>

<p>The <a href="#">a element</a> example <br />
The <abbr>abbr element</abbr> and <abbr title="Title text">abbr element with title</abbr> examples <br />
The <b>b element</b> example <br />
The <cite>cite element</cite> example <br />
The <code>code element</code> example <br />
The <del>del element</del> example <br />
The <dfn>dfn element</dfn> and <dfn title="Title text">dfn element with title</dfn> examples <br />
The <em>em element</em> example <br />
The <i>i element</i> example <br />
The <ins>ins element</ins> example <br />
The <kbd>kbd element</kbd> example <br />
The <mark>mark element</mark> example <br />
The <q>q element <q>inside</q> a q element</q> example <br />
The <s>s element</s> example <br />
The <samp>samp element</samp> example <br />
The <small>small element</small> example <br />
The <span>span element</span> example <br />
The <strong>strong element</strong> example <br />
The <sub>sub element</sub> example <br />
The <sup>sup element</sup> example <br />
The <var>var element</var> example <br />
The <u>u element</u> example</p>

<hr />

<h2 id="forms">Forms</h2>

<form>
<fieldset>
<legend>Inputs as descendents of labels (form legend)</legend>
<label>
<b>Text input</b>
<input type="text" value="default value">
</label>
<label>
<b>Email input</b>
<input type="email">
</label>
<label>
<b>Search input</b>
<input type="search">
</label>
<label>
<b>Tel input</b>
<input type="tel">
</label>
<label>
<b>URL input</b>
<input type="url" placeholder="http://">
</label>
<label>
<b>Password input</b>
<input type="password" value="password">
</label>
<label>
<b>File input</b>
<input type="file">
</label>
<label>
<b>Radio input</b>
<input type="radio" name="rad">
</label>
<label>
<b>Checkbox input</b>
<input type="checkbox">
</label>
<label>
<input type="radio" name="rad"> Radio input
</label>
<label>
<input type="checkbox"> Checkbox input
</label>
<label>
<b>Select field</b>
<select>
<option>Option 01</option>
<option>Option 02</option>
</select>
</label>
<label>
<b>Textarea</b>
<textarea cols="30" rows="5" >Textarea text</textarea>
</label>
</fieldset>

<fieldset>
<legend>Clickable inputs and buttons</legend>
<input type="image" src="http://placekitten.com/90/24" alt="Image (input)">
<input type="reset" value="Reset (input)">
<input type="button" value="Button (input)">
<input type="submit" value="Submit (input)">
<button type="reset">Reset (button)</button>
<button type="button">Button (button)</button>
<button type="submit">Submit (button)</button>
</fieldset>

<fieldset id="boxsize">
<legend>box-sizing tests</legend>
<div><input type="text" value="text"></div>
<div><input type="email" value="email"></div>
<div><input type="search" value="search"></div>
<div><input type="url" value="http://example.com"></div>
<div><input type="password" value="password"></div>

<div><input type="color" value="#000000"></div>
<div><input type="number" value="5"></div>
<div><input type="range" value="10"></div>
<div><input type="date" value="1970-01-01"></div>
<div><input type="month" value="1970-01"></div>
<div><input type="week" value="1970-W01"></div>
<div><input type="time" value="18:23"></div>
<div><input type="datetime" value="1970-01-01T00:00:00Z"></div>
<div><input type="datetime-local" value="1970-01-01T00:00"></div>

<div><input type="radio"></div>
<div><input type="checkbox"></div>

<div><select><option>Option 01</option><option>Option 02</option></select></div>
<div><textarea cols="30" rows="5" >Textarea text</textarea></div>

<div><input type="image" src="http://placekitten.com/90/24" alt="Image (input)"></div>
<div><input type="reset" value="Reset (input)"></div>
<div><input type="button" value="Button (input)"></div>
<div><input type="submit" value="Submit (input)"></div>

<div><button type="reset">Reset (button)</button></div>
<div><button type="button">Button (button)</button></div>
<div><button type="submit">Submit (button)</button></div>
</fieldset>
</form>

<hr />

<h2 id="embeds">Embeds</h2>

<p>Sometimes all you want to do is embed a little love from another location and set your post alive.</p>

<h3 id="video">Video</h3>

<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>

<iframe src="//player.vimeo.com/video/103224792?title=0&amp;byline=0&amp;portrait=0" width="600" height="338" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>

<p>Culpa qui officia deserunt mollit anim id est laborum.</p>

<h3 id="slides">Slides</h3>

<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>

<script async class="speakerdeck-embed" data-id="34d2856027ce01316b5d621ab8e7d421" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>

<p>Culpa qui officia deserunt mollit anim id est laborum.</p>

<h3 id="audio">Audio</h3>

<p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>

<iframe width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/169381837&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true"></iframe>

<p>Culpa qui officia deserunt mollit anim id est laborum.</p>

<h3 id="code">Code</h3>

<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt.</p>

<p><div data-height="268" data-theme-id="0" data-slug-hash="bcqhe" data-default-tab="js" data-user="rglazebrook" class='codepen'></p>

<pre><code>var c = new Sketch.create({autoclear: false}),
    bigCircle = 50,
    littleCircle = 5,
    // The velocity value determines how much to move the spinner head (in radians).
    velocity = 0.105,
    hue = 0,
    // The alpha value below determines the length of the spinner&#39;s tail.
    bg = &#39;rgba(40,40,40,.075)&#39;;
    Spinner = function() {};

Spinner.prototype.setup = function() {
  this.x = c.width / 2;
  this.y = c.height / 2 - bigCircle;
  this.rotation = 0;
}
Spinner.prototype.update = function() {
  this.rotation += velocity;
  this.rotation = this.rotation % TWO_PI;
  this.x = c.width /2 + cos(this.rotation) * bigCircle;
  this.y = c.height / 2 + sin(this.rotation) * bigCircle;
}
Spinner.prototype.draw = function() {
  c.fillStyle = &#39;hsl(&#39;+hue+&#39;,50%,50%)&#39;;
  c.beginPath();
  c.arc(this.x, this.y, littleCircle, 0, TWO_PI);
  c.fill();
  c.closePath();
}
c.setup = function() {
  spinner = new Spinner();
  spinner.setup();
}
c.update = function() {
  spinner.update();
  hue = ++hue % 360;
}
c.draw = function() {
  spinner.draw();
  c.fillStyle = bg;
  c.fillRect(0,0,c.width,c.height);
}
</code></pre>

<p>See the Pen <a href='http://codepen.io/rglazebrook/pen/bcqhe/'>Simple Rotating Spinner</a> by Rob Glazebrook (<a href='http://codepen.io/rglazebrook'>@rglazebrook</a>) on <a href='http://codepen.io'>CodePen</a>.</p>

<p></div><script async src="//codepen.io/assets/embed/ei.js"></script></p>

<p>Isn't it beautiful?</p>

	  ]]></description>
	</item>

	<item>
	  <title>The Businessman & the fisherman</title>
	  <link>/2014-08-12-the-businessman-and-fisherman/</link>
	  <author></author>
	  <pubDate>2014-08-12T18:18:00+08:00</pubDate>
	  <guid>/2014-08-12-the-businessman-and-fisherman/</guid>
	  <description><![CDATA[
	     <p>An American businessman took a vacation to a small coastal Mexican village on doctor’s orders. Unable to sleep after an urgent phone call from the office the first morning, he walked out to the pier to clear his head. A small boat with just one fisherman had docked, and inside the boat were several large yellowfin tuna. The American complimented the Mexican on the quality of his fish.</p>

<p>“How long did it take you to catch them?” the American asked.</p>

<p>“Only a little while,” the Mexican replied in surprisingly good English.</p>

<p>“Why don’t you stay out longer and catch more fish?” the American then asked.</p>

<p>“I have enough to support my family and give a few to friends,” the Mexican said as he unloaded them into a basket.</p>

<p>“But… What do you do with the rest of your time?”</p>

<p>The Mexican looked up and smiled. “I sleep late, fish a little, play with my children, take a siesta with my wife, Julia, and stroll into the village each evening, where I sip wine and play guitar with my amigos. I have a full and busy life, señor.”</p>

<p>The American laughed and stood tall. “Sir, I’m a Harvard M.B.A. and can help you. You should spend more time fishing, and with the proceeds, buy a bigger boat. In no time, you could buy several boats with the increased haul. Eventually, you would have a fleet of fishing boats.”</p>

<p>He continued, “Instead of selling your catch to a middleman, you would sell directly to the consumers, eventually opening your own cannery. You would control the product, processing, and distribution. You would need to leave this small coastal fishing village, of course, and move to Mexico City, then to Los Angeles, and eventually to New York City, where you could run your expanded enterprise with proper management.</p>

<p>The Mexican fisherman asked, “But, señor, how long will all this take?”</p>

<p>To which the American replied, “15-20 years, 25 tops.”</p>

<p>“But what then, señor?”</p>

<p>The American laughed and said, “That’s the best part. When the time is right, you would announce an IPO and sell your company stock to the public and become very rich. You would make millions.”</p>

<p>“Millions señor? Then what?”</p>

<p>“Then you would retire and move to a small coastal fishing village, where you would sleep late, fish a little, play with your kids, take a siesta with your wife, and stroll in to the village in the evenings where you could sip wine and play your guitar with your amigos.”</p>

<p>Adapted from the “Anekdote zur Senkung der Arbeitsmoral” by <strong>Heinrich Böll</strong></p>

<p>An influential German write and Nobel Prize for Literature in 1972.</p>

	  ]]></description>
	</item>

	<item>
	  <title>I Have a Dream</title>
	  <link>/1963-08-28-i-have-a-dream/</link>
	  <author></author>
	  <pubDate>1963-08-28T18:18:00+08:00</pubDate>
	  <guid>/1963-08-28-i-have-a-dream/</guid>
	  <description><![CDATA[
	     <p>I am happy to join with you today in what will go down in history as the greatest demonstration for freedom in the history of our nation.</p>

<p>Five score years ago, a great American, in whose symbolic shadow we stand today, signed the Emancipation Proclamation. This momentous decree came as a great beacon light of hope to millions of Negro slaves who had been seared in the flames of withering injustice. It came as a joyous daybreak to end the long night of their captivity.</p>

<p>But one hundred years later, the Negro still is not free. One hundred years later, the life of the Negro is still sadly crippled by the manacles of segregation and the chains of discrimination. One hundred years later, the Negro lives on a lonely island of poverty in the midst of a vast ocean of material prosperity. One hundred years later, the Negro is still languished in the corners of American society and finds himself an exile in his own land. And so we’ve come here today to dramatize a shameful condition.</p>

<p>In a sense we’ve come to our nation’s capital to cash a check. When the architects of our republic wrote the magnificent words of the Constitution and the Declaration of Independence, they were signing a promissory note to which every American was to fall heir. This note was a promise that all men, yes, black men as well as white men, would be guaranteed the “unalienable Rights” of “Life, Liberty and the pursuit of Happiness.” It is obvious today that America has defaulted on this promissory note, insofar as her citizens of color are concerned. Instead of honoring this sacred obligation, America has given the Negro people a bad check, a check which has come back marked “insufficient funds.”</p>

<p>But we refuse to believe that the bank of justice is bankrupt. We refuse to believe that there are insufficient funds in the great vaults of opportunity of this nation. And so, we’ve come to cash this check, a check that will give us upon demand the riches of freedom and the security of justice.</p>

<p>We have also come to this hallowed spot to remind America of the fierce urgency of Now. This is no time to engage in the luxury of cooling off or to take the tranquilizing drug of gradualism. Now is the time to make real the promises of democracy. Now is the time to rise from the dark and desolate valley of segregation to the sunlit path of racial justice. Now is the time to lift our nation from the quicksands of racial injustice to the solid rock of brotherhood. Now is the time to make justice a reality for all of God’s children.</p>

<p>It would be fatal for the nation to overlook the urgency of the moment. This sweltering summer of the Negro’s legitimate discontent will not pass until there is an invigorating autumn of freedom and equality. Nineteen sixty-three is not an end, but a beginning. And those who hope that the Negro needed to blow off steam and will now be content will have a rude awakening if the nation returns to business as usual. And there will be neither rest nor tranquility in America until the Negro is granted his citizenship rights. The whirlwinds of revolt will continue to shake the foundations of our nation until the bright day of justice emerges.</p>

<p>But there is something that I must say to my people, who stand on the warm threshold which leads into the palace of justice: In the process of gaining our rightful place, we must not be guilty of wrongful deeds. Let us not seek to satisfy our thirst for freedom by drinking from the cup of bitterness and hatred. We must forever conduct our struggle on the high plane of dignity and discipline. We must not allow our creative protest to degenerate into physical violence. Again and again, we must rise to the majestic heights of meeting physical force with soul force.</p>

<p>The marvelous new militancy which has engulfed the Negro community must not lead us to a distrust of all white people, for many of our white brothers, as evidenced by their presence here today, have come to realize that their destiny is tied up with our destiny. And they have come to realize that their freedom is inextricably bound to our freedom.</p>

<p>We cannot walk alone.</p>

<p>And as we walk, we must make the pledge that we shall always march ahead.</p>

<p>We cannot turn back.</p>

<p>There are those who are asking the devotees of civil rights, “When will you be satisfied?” We can never be satisfied as long as the Negro is the victim of the unspeakable horrors of police brutality. We can never be satisfied as long as our bodies, heavy with the fatigue of travel, cannot gain lodging in the motels of the highways and the hotels of the cities. We cannot be satisfied as long as the negro’s basic mobility is from a smaller ghetto to a larger one. We can never be satisfied as long as our children are stripped of their self-hood and robbed of their dignity by signs stating: “For Whites Only.” We cannot be satisfied as long as a Negro in Mississippi cannot vote and a Negro in New York believes he has nothing for which to vote. No, no, we are not satisfied, and we will not be satisfied until “justice rolls down like waters, and righteousness like a mighty stream.”</p>

<p>I am not unmindful that some of you have come here out of great trials and tribulations. Some of you have come fresh from narrow jail cells. And some of you have come from areas where your quest – quest for freedom left you battered by the storms of persecution and staggered by the winds of police brutality. You have been the veterans of creative suffering. Continue to work with the faith that unearned suffering is redemptive. Go back to Mississippi, go back to Alabama, go back to South Carolina, go back to Georgia, go back to Louisiana, go back to the slums and ghettos of our northern cities, knowing that somehow this situation can and will be changed.</p>

<p>Let us not wallow in the valley of despair, I say to you today, my friends.</p>

<p>And so even though we face the difficulties of today and tomorrow, I still have a dream. It is a dream deeply rooted in the American dream.</p>

<p>I have a dream that one day this nation will rise up and live out the true meaning of its creed: “We hold these truths to be self-evident, that all men are created equal.”</p>

<p>I have a dream that one day on the red hills of Georgia, the sons of former slaves and the sons of former slave owners will be able to sit down together at the table of brotherhood.</p>

<p>I have a dream that one day even the state of Mississippi, a state sweltering with the heat of injustice, sweltering with the heat of oppression, will be transformed into an oasis of freedom and justice.</p>

<p>I have a dream that my four little children will one day live in a nation where they will not be judged by the color of their skin but by the content of their character.</p>

<p>I have a <strong>dream</strong> today!</p>

<p>I have a dream that one day, down in Alabama, with its vicious racists, with its governor having his lips dripping with the words of “interposition” and “nullification” – one day right there in Alabama little black boys and black girls will be able to join hands with little white boys and white girls as sisters and brothers.</p>

<p>I have a <strong>dream</strong> today!</p>

<p>I have a dream that one day every valley shall be exalted, and every hill and mountain shall be made low, the rough places will be made plain, and the crooked places will be made straight; “and the glory of the Lord shall be revealed and all flesh shall see it together.”</p>

<p>This is our hope, and this is the faith that I go back to the South with.</p>

<p>With this faith, we will be able to hew out of the mountain of despair a stone of hope. With this faith, we will be able to transform the jangling discords of our nation into a beautiful symphony of brotherhood. With this faith, we will be able to work together, to pray together, to struggle together, to go to jail together, to stand up for freedom together, knowing that we will be free one day.</p>

<p>And this will be the day – this will be the day when all of God’s children will be able to sing with new meaning:</p>

<blockquote>
  <p>My country ‘tis of thee, sweet land of liberty, of thee I sing.</p>

  <p>Land where my fathers died, land of the Pilgrim’s pride,</p>

  <p>From every mountainside, let freedom ring!</p>
</blockquote>

<p>And if America is to be a great nation, this must become true.</p>

<p>And so let freedom ring from the prodigious hilltops of New Hampshire.</p>

<blockquote>
  <p>Let freedom ring from the mighty mountains of New York.</p>

  <p>Let freedom ring from the heightening Alleghenies of Pennsylvania.</p>

  <p>Let freedom ring from the snow-capped Rockies of Colorado.</p>

  <p>Let freedom ring from the curvaceous slopes of California.</p>
</blockquote>

<p>But not only that:</p>

<blockquote>
  <p>Let freedom ring from Stone Mountain of Georgia.</p>

  <p>Let freedom ring from Lookout Mountain of Tennessee.</p>

  <p>Let freedom ring from every hill and molehill of Mississippi.</p>

  <p>From every mountainside, let freedom ring.</p>
</blockquote>

<p>And when this happens, and when we allow freedom ring, when we let it ring from every village and every hamlet, from every state and every city, we will be able to speed up that day when all of God’s children, black men and white men, Jews and Gentiles, Protestants and Catholics, will be able to join hands and sing in the words of the old Negro spiritual:</p>

<p><em>Free at last! Free at last!</em></p>

<p><em>Thank God Almighty, we are free at last!</em></p>

	  ]]></description>
	</item>

	<item>
	  <title>The Purpose of Education</title>
	  <link>/1948-12-12-the-purpose-of-education/</link>
	  <author></author>
	  <pubDate>1948-12-12T18:18:00+08:00</pubDate>
	  <guid>/1948-12-12-the-purpose-of-education/</guid>
	  <description><![CDATA[
	     <p>As I engage in the so-called “bull sessions” around and about the school, I too often find that most college men have a misconception of the purpose of education. Most of the “brethren” think that education should equip them with the proper instruments of exploitation so that they can forever trample over the masses. Still others think that education should furnish them with noble ends rather than means to an end.</p>

<p>It seems to me that education has a two-fold function to perform in the life of man and in society: the one is utility and the other is culture. Education must enable a man to become more efficient, to achieve with increasing facility the ligitimate goals of his life.</p>

<p>Education must also train one for quick, resolute and effective thinking. To think incisively and to think for one’s self is very difficult. We are prone to let our mental life become invaded by legions of half truths, prejudices, and propaganda. At this point, I often wonder whether or not education is fulfilling its purpose. A great majority of the so-called educated people do not think logically and scientifically. Even the press, the classroom, the platform, and the pulpit in many instances do not give us objective and unbiased truths. To save man from the morass of propaganda, in my opinion, is one of the chief aims of education. Education must enable one to sift and weigh evidence, to discern the true from the false, the real from the unreal, and the facts from the fiction.</p>

<p>The function of education, therefore, is to teach one to think intensively and to think critically. But education which stops with efficiency may prove the greatest menace to society. The most dangerous criminal may be the man gifted with reason, but with no morals.</p>

<p>The late Eugene Talmadge, in my opinion, possessed one of the better minds of Georgia, or even America. Moreover, he wore the Phi Beta Kappa key. By all measuring rods, Mr. Talmadge could think critically and intensively; yet he contends that I am an inferior being. Are those the types of men we call educated?</p>

<p>We must remember that intelligence is not enough. Intelligence plus character–that is the goal of true education. The complete education gives one not only power of concentration, but worthy objectives upon which to concentrate. The broad education will, therefore, transmit to one not only the accumulated knowledge of the race but also the accumulated experience of social living.</p>

<p>If we are not careful, our colleges will produce a group of close-minded, unscientific, illogical propagandists, consumed with immoral acts. Be careful, “brethren!” Be careful, teachers!</p>

	  ]]></description>
	</item>

	<item>
	  <title>Out to Sea</title>
	  <link>/1912-07-24-out-to-sea/</link>
	  <author></author>
	  <pubDate>1912-07-24T18:18:00+08:00</pubDate>
	  <guid>/1912-07-24-out-to-sea/</guid>
	  <description><![CDATA[
	     <p>I had this story from one who had no business to tell it to me, or to any other. I may credit the seductive influence of an old vintage upon the narrator for the beginning of it, and my own skeptical incredulity during the days that followed for the balance of the strange tale.</p>

<p>When my convivial host discovered that he had told me so much, and that I was prone to doubtfulness, his foolish pride assumed the task the old vintage had commenced, and so he unearthed written evidence in the form of musty manuscript, and dry official records of the British Colonial Office to support many of the salient features of his remarkable narrative.</p>

<p>I do not say the story is true, for I did not witness the happenings which it portrays, but the fact that in the telling of it to you I have taken fictitious names for the principal characters quite sufficiently evidences the sincerity of my own belief that it MAY be true.</p>

<p>The yellow, mildewed pages of the diary of a man long dead, and the records of the Colonial Office dovetail perfectly with the narrative of my convivial host, and so I give you the story as I painstakingly pieced it out from these several various agencies.</p>

<p>If you do not find it credible you will at least be as one with me in acknowledging that it is unique, remarkable, and interesting.</p>

<p>From the records of the Colonial Office and from the dead man’s diary we learn that a certain young English nobleman, whom we shall call John Clayton, Lord Greystoke, was commissioned to make a peculiarly delicate investigation of conditions in a British West Coast African Colony from whose simple native inhabitants another European power was known to be recruiting soldiers for its native army, which it used solely for the forcible collection of rubber and ivory from the savage tribes along the Congo and the Aruwimi. The natives of the British Colony complained that many of their young men were enticed away through the medium of fair and glowing promises, but that few if any ever returned to their families.</p>

<p>The Englishmen in Africa went even further, saying that these poor blacks were held in virtual slavery, since after their terms of enlistment expired their ignorance was imposed upon by their white officers, and they were told that they had yet several years to serve.</p>

<p>And so the Colonial Office appointed John Clayton to a new post in British West Africa, but his confidential instructions centered on a thorough investigation of the unfair treatment of black British subjects by the officers of a friendly European power. Why he was sent, is, however, of little moment to this story, for he never made an investigation, nor, in fact, did he ever reach his destination.</p>

<p>Clayton was the type of Englishman that one likes best to associate with the noblest monuments of historic achievement upon a thousand victorious battlefields–a strong, virile man –mentally, morally, and physically.</p>

<p>In stature he was above the average height; his eyes were gray, his features regular and strong; his carriage that of perfect, robust health influenced by his years of army training.</p>

<p>Political ambition had caused him to seek transference from the army to the Colonial Office and so we find him, still young, entrusted with a delicate and important commission in the service of the Queen.</p>

<p>When he received this appointment he was both elated and appalled. The preferment seemed to him in the nature of a well-merited reward for painstaking and intelligent service, and as a stepping stone to posts of greater importance and responsibility; but, on the other hand, he had been married to the Hon. Alice Rutherford for scarce a three months, and it was the thought of taking this fair young girl into the dangers and isolation of tropical Africa that appalled him.</p>

<p>For her sake he would have refused the appointment, but she would not have it so. Instead she insisted that he accept, and, indeed, take her with him.</p>

<p>There were mothers and brothers and sisters, and aunts and cousins to express various opinions on the subject, but as to what they severally advised history is silent.</p>

<p>We know only that on a bright May morning in 1888, John, Lord Greystoke, and Lady Alice sailed from Dover on their way to Africa.</p>

<p>A month later they arrived at Freetown where they chartered a small sailing vessel, the Fuwalda, which was to bear them to their final destination.</p>

<p>And here John, Lord Greystoke, and Lady Alice, his wife, vanished from the eyes and from the knowledge of men.</p>

<p>Two months after they weighed anchor and cleared from the port of Freetown a half dozen British war vessels were scouring the south Atlantic for trace of them or their little vessel, and it was almost immediately that the wreckage was found upon the shores of St. Helena which convinced the world that the Fuwalda had gone down with all on board, and hence the search was stopped ere it had scarce begun; though hope lingered in longing hearts for many years.</p>

<p>The Fuwalda, a barkentine of about one hundred tons, was a vessel of the type often seen in coastwise trade in the far southern Atlantic, their crews composed of the offscourings of the sea–unhanged murderers and cutthroats of every race and every nation.</p>

<p>The Fuwalda was no exception to the rule. Her officers were swarthy bullies, hating and hated by their crew. The captain, while a competent seaman, was a brute in his treatment of his men. He knew, or at least he used, but two arguments in his dealings with them–a belaying pin and a revolver–nor is it likely that the motley aggregation he signed would have understood aught else.</p>

<p>So it was that from the second day out from Freetown John Clayton and his young wife witnessed scenes upon the deck of the Fuwalda such as they had believed were never enacted outside the covers of printed stories of the sea.</p>

<p>It was on the morning of the second day that the first link was forged in what was destined to form a chain of circumstances ending in a life for one then unborn such as has never been paralleled in the history of man.</p>

<p>Two sailors were washing down the decks of the Fuwalda, the first mate was on duty, and the captain had stopped to speak with John Clayton and Lady Alice.</p>

<p>The men were working backwards toward the little party who were facing away from the sailors. Closer and closer they came, until one of them was directly behind the captain. In another moment he would have passed by and this strange narrative would never have been recorded.</p>

<p>But just that instant the officer turned to leave Lord and Lady Greystoke, and, as he did so, tripped against the sailor and sprawled headlong upon the deck, overturning the water- pail so that he was drenched in its dirty contents.</p>

<p>For an instant the scene was ludicrous; but only for an instant. With a volley of awful oaths, his face suffused with the scarlet of mortification and rage, the captain regained his feet, and with a terrific blow felled the sailor to the deck.</p>

<p>The man was small and rather old, so that the brutality of the act was thus accentuated. The other seaman, however, was neither old nor small–a huge bear of a man, with fierce black mustachios, and a great bull neck set between massive shoulders.</p>

<p>As he saw his mate go down he crouched, and, with a low snarl, sprang upon the captain crushing him to his knees with a single mighty blow.</p>

<p>From scarlet the officer’s face went white, for this was mutiny; and mutiny he had met and subdued before in his brutal career. Without waiting to rise he whipped a revolver from his pocket, firing point blank at the great mountain of muscle towering before him; but, quick as he was, John Clayton was almost as quick, so that the bullet which was intended for the sailor’s heart lodged in the sailor’s leg instead, for Lord Greystoke had struck down the captain’s arm as he had seen the weapon flash in the sun.</p>

<p>Words passed between Clayton and the captain, the former making it plain that he was disgusted with the brutality displayed toward the crew, nor would he countenance anything further of the kind while he and Lady Greystoke remained passengers.</p>

<p>The captain was on the point of making an angry reply, but, thinking better of it, turned on his heel and black and scowling, strode aft.</p>

<p>He did not care to antagonize an English official, for the Queen’s mighty arm wielded a punitive instrument which he could appreciate, and which he feared–England’s far-reaching navy.</p>

<p>The two sailors picked themselves up, the older man assisting his wounded comrade to rise. The big fellow, who was known among his mates as Black Michael, tried his leg gingerly, and, finding that it bore his weight, turned to Clayton with a word of gruff thanks.</p>

<p>Though the fellow’s tone was surly, his words were evidently well meant. Ere he had scarce finished his little speech he had turned and was limping off toward the forecastle with the very apparent intention of forestalling any further conversation.</p>

<p>They did not see him again for several days, nor did the captain accord them more than the surliest of grunts when he was forced to speak to them.</p>

<p>They took their meals in his cabin, as they had before the unfortunate occurrence; but the captain was careful to see that his duties never permitted him to eat at the same time.</p>

<p>The other officers were coarse, illiterate fellows, but little above the villainous crew they bullied, and were only too glad to avoid social intercourse with the polished English noble and his lady, so that the Claytons were left very much to themselves.</p>

<p>This in itself accorded perfectly with their desires, but it also rather isolated them from the life of the little ship so that they were unable to keep in touch with the daily happenings which were to culminate so soon in bloody tragedy.</p>

	  ]]></description>
	</item>

	<item>
	  <title>Looking-Glass house</title>
	  <link>/1871-03-18-looking-glass-house/</link>
	  <author></author>
	  <pubDate>1871-03-18T18:18:00+08:00</pubDate>
	  <guid>/1871-03-18-looking-glass-house/</guid>
	  <description><![CDATA[
	     <p>One thing was certain, that the white kitten had had nothing to do with it:— it was the black kitten’s fault entirely. For the white kitten had been having its face washed by the old cat for the last quarter of an hour (and bearing it pretty well, considering); so you see that it couldn’t have had any hand in the mischief.
The way Dinah washed her children’s faces was this: first she held the poor thing down by its ear with one paw, and then with the other paw she rubbed its face all over, the wrong way, beginning at the nose: and just now, as I said, she was hard at work on the white kitten, which was lying quite still and trying to purr — no doubt feeling that it was all meant for its good.
But the black kitten had been finished with earlier in the afternoon, and so, while Alice was sitting curled up in a corner of the great arm-chair, half talking to herself and half asleep, the kitten had been having a grand game of romps with the ball of worsted Alice had been trying to wind up, and had been rolling it up and down till it had all come undone again; and there it was, spread over the hearth-rug, all knots and tangles, with the kitten running after its own tail in the middle.</p>

<p>‘Oh, you wicked little thing!’ cried Alice, catching up the kitten, and giving it a little kiss to make it understand that it was in disgrace. ‘Really, Dinah ought to have taught you better manners! You ought, Dinah, you know you ought!’ she added, looking reproachfully at the old cat, and speaking in as cross a voice as she could manage — and then she scrambled back into the arm-chair, taking the kitten and the worsted with her, and began winding up the ball again. But she didn’t get on very fast, as she was talking all the time, sometimes to the kitten, and sometimes to herself. Kitty sat very demurely on her knee, pretending to watch the progress of the winding, and now and then putting out one paw and gently touching the ball, as if it would be glad to help, if it might. ‘Do you know what to-morrow is, Kitty?’ Alice began. ‘You’d have guessed if you’d been up in the window with me — only Dinah was making you tidy, so you couldn’t. I was watching the boys getting in sticks for the bonfire — and it wants plenty of sticks, Kitty! Only it got so cold, and it snowed so, they had to leave off. Never mind, Kitty, we’ll go and see the bonfire to-morrow.’ Here Alice wound two or three turns of the worsted round the kitten’s neck, just to see how it would look: this led to a scramble, in which the ball rolled down upon the floor, and yards and yards of it got unwound again.</p>

<p>‘Do you know, I was so angry, Kitty,’ Alice went on as soon as they were comfortably settled again, ‘when I saw all the mischief you had been doing, I was very nearly opening the window, and putting you out into the snow! And you’d have deserved it, you little mischievous darling! What have you got to say for yourself? Now don’t interrupt me!’ she went on, holding up one finger. ‘I’m going to tell you all your faults. Number one: you squeaked twice while Dinah was washing your face this morning. Now you can’t deny it, Kitty: I heard you! What’s that you say?’ (pretending that the kitten was speaking.) ‘Her paw went into your eye? Well, that’s your fault, for keeping your eyes open — if you’d shut them tight up, it wouldn’t have happened. Now don’t make any more excuses, but listen! Number two: you pulled Snowdrop away by the tail just as I had put down the saucer of milk before her! What, you were thirsty, were you? How do you know she wasn’t thirsty too? Now for number three: you unwound every bit of the worsted while I wasn’t looking!
‘That’s three faults, Kitty, and you’ve not been punished for any of them yet. You know I’m saving up all your punishments for Wednesday week — Suppose they had saved up all my punishments!’ she went on, talking more to herself than the kitten. ‘What would they do at the end of a year? I should be sent to prison, I suppose, when the day came. Or — let me see — suppose each punishment was to be going without a dinner: then, when the miserable day came, I should have to go without fifty dinners at once! Well, I shouldn’t mind that much! I’d far rather go without them than eat them! ‘Do you hear the snow against the window-panes, Kitty? How nice and soft it sounds! Just as if some one was kissing the window all over outside. I wonder if the snow loves the trees and fields, that it kisses them so gently? And then it covers them up snug, you know, with a white quilt; and perhaps it says, “Go to sleep, darlings, till the summer comes again.” And when they wake up in the summer, Kitty, they dress themselves all in green, and dance about — whenever the wind blows — oh, that’s very pretty!’ cried Alice, dropping the ball of worsted to clap her hands. ‘And I do so wish it was true! I’m sure the woods look sleepy in the autumn, when the leaves are getting brown. ‘Kitty, can you play chess? Now, don’t smile, my dear, I’m asking it seriously. Because, when we were playing just now, you watched just as if you understood it: and when I said “Check!” you purred! Well, it was a nice check, Kitty, and really I might have won, if it hadn’t been for that nasty Knight, that came wiggling down among my pieces. Kitty, dear, let’s pretend —’ And here I wish I could tell you half the things Alice used to say, beginning with her favourite phrase ‘Let’s pretend.’ She had had quite a long argument with her sister only the day before — all because Alice had begun with ‘Let’s pretend we’re kings and queens;’ and her sister, who liked being very exact, had argued that they couldn’t, because there were only two of them, and Alice had been reduced at last to say, ‘Well, you can be one of them then, and I’ll be all the rest.’ And once she had really frightened her old nurse by shouting suddenly in her ear, ‘Nurse! Do let’s pretend that I’m a hungry hyaena, and you’re a bone.’ But this is taking us away from Alice’s speech to the kitten. ‘Let’s pretend that you’re the Red Queen, Kitty! Do you know, I think if you sat up and folded your arms, you’d look exactly like her. Now do try, there’s a dear!’ And Alice got the Red Queen off the table, and set it up before the kitten as a model for it to imitate: however, the thing didn’t succeed, principally, Alice said, because the kitten wouldn’t fold its arms properly. So, to punish it, she held it up to the Looking-glass, that it might see how sulky it was —‘and if you’re not good directly,’ she added, ‘I’ll put you through into Looking-glass House. How would you like that?’
‘Now, if you’ll only attend, Kitty, and not talk so much, I’ll tell you all my ideas about Looking-glass House. First, there’s the room you can see through the glass — that’s just the same as our drawing room, only the things go the other way. I can see all of it when I get upon a chair — all but the bit behind the fireplace. Oh! I do so wish I could see that bit! I want so much to know whether they’ve a fire in the winter: you never can tell, you know, unless our fire smokes, and then smoke comes up in that room too — but that may be only pretence, just to make it look as if they had a fire. Well then, the books are something like our books, only the words go the wrong way; I know that, because I’ve held up one of our books to the glass, and then they hold up one in the other room. ‘How would you like to live in Looking-glass House, Kitty? I wonder if they’d give you milk in there? Perhaps Looking-glass milk isn’t good to drink — But oh, Kitty! now we come to the passage. You can just see a little peep of the passage in Looking-glass House, if you leave the door of our drawing-room wide open: and it’s very like our passage as far as you can see, only you know it may be quite different on beyond. Oh, Kitty! how nice it would be if we could only get through into Looking-glass House! I’m sure it’s got, oh! such beautiful things in it! Let’s pretend there’s a way of getting through into it, somehow, Kitty. Let’s pretend the glass has got all soft like gauze, so that we can get through. Why, it’s turning into a sort of mist now, I declare! It’ll be easy enough to get through —’ She was up on the chimney-piece while she said this, though she hardly knew how she had got there. And certainly the glass was beginning to melt away, just like a bright silvery mist.</p>

<p>In another moment Alice was through the glass, and had jumped lightly down into the Looking-glass room. The very first thing she did was to look whether there was a fire in the fireplace, and she was quite pleased to find that there was a real one, blazing away as brightly as the one she had left behind. ‘So I shall be as warm here as I was in the old room,’ thought Alice: ‘warmer, in fact, because there’ll be no one here to scold me away from the fire. Oh, what fun it’ll be, when they see me through the glass in here, and can’t get at me!’</p>

<p>Then she began looking about, and noticed that what could be seen from the old room was quite common and uninteresting, but that all the rest was as different as possible. For instance, the pictures on the wall next the fire seemed to be all alive, and the very clock on the chimney-piece (you know you can only see the back of it in the Looking-glass) had got the face of a little old man, and grinned at her.
‘They don’t keep this room so tidy as the other,’ Alice thought to herself, as she noticed several of the chessmen down in the hearth among the cinders: but in another moment, with a little ‘Oh!’ of surprise, she was down on her hands and knees watching them. The chessmen were walking about, two and two!</p>

<p>‘Here are the Red King and the Red Queen,’ Alice said (in a whisper, for fear of frightening them), ‘and there are the White King and the White Queen sitting on the edge of the shovel — and here are two castles walking arm in arm — I don’t think they can hear me,’ she went on, as she put her head closer down, ‘and I’m nearly sure they can’t see me. I feel somehow as if I were invisible —’ Here something began squeaking on the table behind Alice, and made her turn her head just in time to see one of the White Pawns roll over and begin kicking: she watched it with great curiosity to see what would happen next.
‘It is the voice of my child!’ the White Queen cried out as she rushed past the King, so violently that she knocked him over among the cinders. ‘My precious Lily! My imperial kitten!’ and she began scrambling wildly up the side of the fender. ‘Imperial fiddlestick!’ said the King, rubbing his nose, which had been hurt by the fall. He had a right to be a little annoyed with the Queen, for he was covered with ashes from head to foot. Alice was very anxious to be of use, and, as the poor little Lily was nearly screaming herself into a fit, she hastily picked up the Queen and set her on the table by the side of her noisy little daughter.
The Queen gasped, and sat down: the rapid journey through the air had quite taken away her breath and for a minute or two she could do nothing but hug the little Lily in silence. As soon as she had recovered her breath a little, she called out to the White King, who was sitting sulkily among the ashes, ‘Mind the volcano!’
‘What volcano?’ said the King, looking up anxiously into the fire, as if he thought that was the most likely place to find one. ‘Blew — me — up,’ panted the Queen, who was still a little out of breath. ‘Mind you come up — the regular way — don’t get blown up!’ Alice watched the White King as he slowly struggled up from bar to bar, till at last she said, ‘Why, you’ll be hours and hours getting to the table, at that rate. I’d far better help you, hadn’t I?’ But the King took no notice of the question: it was quite clear that he could neither hear her nor see her.
So Alice picked him up very gently, and lifted him across more slowly than she had lifted the Queen, that she mightn’t take his breath away: but, before she put him on the table, she thought she might as well dust him a little, he was so covered with ashes.</p>

<p>She said afterwards that she had never seen in all her life such a face as the King made, when he found himself held in the air by an invisible hand, and being dusted: he was far too much astonished to cry out, but his eyes and his mouth went on getting larger and larger, and rounder and rounder, till her hand shook so with laughing that she nearly let him drop upon the floor.
‘Oh! please don’t make such faces, my dear!’ she cried out, quite forgetting that the King couldn’t hear her. ‘You make me laugh so that I can hardly hold you! And don’t keep your mouth so wide open! All the ashes will get into it — there, now I think you’re tidy enough!’ she added, as she smoothed his hair, and set him upon the table near the Queen. The King immediately fell flat on his back, and lay perfectly still: and Alice was a little alarmed at what she had done, and went round the room to see if she could find any water to throw over him. However, she could find nothing but a bottle of ink, and when she got back with it she found he had recovered, and he and the Queen were talking together in a frightened whisper — so low, that Alice could hardly hear what they said.
The King was saying, ‘I assure, you my dear, I turned cold to the very ends of my whiskers!’
To which the Queen replied, ‘You haven’t got any whiskers.’
‘The horror of that moment,’ the King went on, ‘I shall never, never forget!’ ‘You will, though,’ the Queen said, ‘if you don’t make a memorandum of it.’ Alice looked on with great interest as the King took an enormous memorandum-book out of his pocket, and began writing. A sudden thought struck her, and she took hold of the end of the pencil, which came some way over his shoulder, and began writing for him.
The poor King looked puzzled and unhappy, and struggled with the pencil for some time without saying anything; but Alice was too strong for him, and at last he panted out, ‘My dear! I really must get a thinner pencil. I can’t manage this one a bit; it writes all manner of things that I don’t intend —’
‘What manner of things?’ said the Queen, looking over the book (in which Alice had put ‘the White Knight is sliding down the poker. He balances very badly’) ‘That’s not a memorandum of your feelings!’</p>

	  ]]></description>
	</item>

	<item>
	  <title>Down The Rabbit Hole</title>
	  <link>/1865-11-26-down-the-rabbit-hole/</link>
	  <author></author>
	  <pubDate>1865-11-26T18:18:00+08:00</pubDate>
	  <guid>/1865-11-26-down-the-rabbit-hole/</guid>
	  <description><![CDATA[
	     <p>Alice was beginning to get very tired of sitting by her sister on the bank, and of having nothing to do: once or twice she had peeped into the book her sister was reading, but it had no pictures or conversations in it, ‘and what is the use of a book,’ thought Alice ‘without pictures or conversation?’</p>

<p>So she was considering in her own mind (as well as she could, for the hot day made her feel very sleepy and stupid), whether the pleasure of making a daisy-chain would be worth the trouble of getting up and picking the daisies, when suddenly a White Rabbit with pink eyes ran close by her.</p>

<p>There was nothing so very remarkable in that; nor did Alice think it so very much out of the way to hear the Rabbit say to itself, ‘Oh dear! Oh dear! I shall be late!’ (when she thought it over afterwards, it occurred to her that she ought to have wondered at this, but at the time it all seemed quite natural); but when the Rabbit actually took a watch out of its waistcoat-pocket, and looked at it, and then hurried on, Alice started to her feet, for it flashed across her mind that she had never before seen a rabbit with either a waistcoat-pocket, or a watch to take out of it, and burning with curiosity, she ran across the field after it, and fortunately was just in time to see it pop down a large rabbit-hole under the hedge.</p>

<p>In another moment down went Alice after it, never once considering how in the world she was to get out again.</p>

<p>The rabbit-hole went straight on like a tunnel for some way, and then dipped suddenly down, so suddenly that Alice had not a moment to think about stopping herself before she found herself falling down a very deep well.</p>

<p>Either the well was very deep, or she fell very slowly, for she had plenty of time as she went down to look about her and to wonder what was going to happen next. First, she tried to look down and make out what she was coming to, but it was too dark to see anything; then she looked at the sides of the well, and noticed that they were filled with cupboards and book-shelves; here and there she saw maps and pictures hung upon pegs. She took down a jar from one of the shelves as she passed; it was labelled ‘ORANGE MARMALADE’, but to her great disappointment it was empty: she did not like to drop the jar for fear of killing somebody, so managed to put it into one of the cupboards as she fell past it.</p>

<p>‘Well!’ thought Alice to herself, ‘after such a fall as this, I shall think nothing of tumbling down stairs! How brave they’ll all think me at home! Why, I wouldn’t say anything about it, even if I fell off the top of the house!’ (Which was very likely true.)</p>

<p>Down, down, down. Would the fall never come to an end! ‘I wonder how many miles I’ve fallen by this time?’ she said aloud. ‘I must be getting somewhere near the centre of the earth. Let me see: that would be four thousand miles down, I think—’ (for, you see, Alice had learnt several things of this sort in her lessons in the schoolroom, and though this was not a very good opportunity for showing off her knowledge, as there was no one to listen to her, still it was good practice to say it over) ‘—yes, that’s about the right distance—but then I wonder what Latitude or Longitude I’ve got to?’ (Alice had no idea what Latitude was, or Longitude either, but thought they were nice grand words to say.)</p>

<p>Presently she began again. ‘I wonder if I shall fall right through the earth! How funny it’ll seem to come out among the people that walk with their heads downward! The Antipathies, I think—’ (she was rather glad there was no one listening, this time, as it didn’t sound at all the right word) ‘—but I shall have to ask them what the name of the country is, you know. Please, Ma’am, is this New Zealand or Australia?’ (and she tried to curtsey as she spoke—fancy curtseying as you’re falling through the air! Do you think you could manage it?) ‘And what an ignorant little girl she’ll think me for asking! No, it’ll never do to ask: perhaps I shall see it written up somewhere.’</p>

<p>Down, down, down. There was nothing else to do, so Alice soon began talking again. ‘Dinah’ll miss me very much to-night, I should think!’ (Dinah was the cat.) ‘I hope they’ll remember her saucer of milk at tea-time. Dinah my dear! I wish you were down here with me! There are no mice in the air, I’m afraid, but you might catch a bat, and that’s very like a mouse, you know. But do cats eat bats, I wonder?’ And here Alice began to get rather sleepy, and went on saying to herself, in a dreamy sort of way, ‘Do cats eat bats? Do cats eat bats?’ and sometimes, ‘Do bats eat cats?’ for, you see, as she couldn’t answer either question, it didn’t much matter which way she put it. She felt that she was dozing off, and had just begun to dream that she was walking hand in hand with Dinah, and saying to her very earnestly, ‘Now, Dinah, tell me the truth: did you ever eat a bat?’ when suddenly, thump! thump! down she came upon a heap of sticks and dry leaves, and the fall was over.</p>

<p>Alice was not a bit hurt, and she jumped up on to her feet in a moment: she looked up, but it was all dark overhead; before her was another long passage, and the White Rabbit was still in sight, hurrying down it. There was not a moment to be lost: away went Alice like the wind, and was just in time to hear it say, as it turned a corner, ‘Oh my ears and whiskers, how late it’s getting!’ She was close behind it when she turned the corner, but the Rabbit was no longer to be seen: she found herself in a long, low hall, which was lit up by a row of lamps hanging from the roof.</p>

<p>There were doors all round the hall, but they were all locked; and when Alice had been all the way down one side and up the other, trying every door, she walked sadly down the middle, wondering how she was ever to get out again.</p>

<p>Suddenly she came upon a little three-legged table, all made of solid glass; there was nothing on it except a tiny golden key, and Alice’s first thought was that it might belong to one of the doors of the hall; but, alas! either the locks were too large, or the key was too small, but at any rate it would not open any of them.</p>

<p>However, on the second time round, she came upon a low curtain she had not noticed before, and behind it was a little door about fifteen inches high: she tried the little golden key in the lock, and to her great delight it fitted!</p>

<p>Alice opened the door and found that it led into a small passage, not much larger than a rat-hole: she knelt down and looked along the passage into the loveliest garden you ever saw. How she longed to get out of that dark hall, and wander about among those beds of bright flowers and those cool fountains, but she could not even get her head though the doorway; ‘and even if my head would go through,’ thought poor Alice, ‘it would be of very little use without my shoulders. Oh, how I wish I could shut up like a telescope! I think I could, if I only know how to begin.’ For, you see, so many out-of-the-way things had happened lately, that Alice had begun to think that very few things indeed were really impossible.</p>

<p>There seemed to be no use in waiting by the little door, so she went back to the table, half hoping she might find another key on it, or at any rate a book of rules for shutting people up like telescopes: this time she found a little bottle on it, (‘which certainly was not here before,’ said Alice,) and round the neck of the bottle was a paper label, with the words ‘DRINK ME’ beautifully printed on it in large letters.</p>

<p>It was all very well to say ‘Drink me,’ but the wise little Alice was not going to do that in a hurry. ‘No, I’ll look first,’ she said, ‘and see whether it’s marked “poison” or not’; for she had read several nice little histories about children who had got burnt, and eaten up by wild beasts and other unpleasant things, all because they would not remember the simple rules their friends had taught them: such as, that a red-hot poker will burn you if you hold it too long; and that if you cut your finger very deeply with a knife, it usually bleeds; and she had never forgotten that, if you drink much from a bottle marked ‘poison,’ it is almost certain to disagree with you, sooner or later.</p>

<p>However, this bottle was not marked ‘poison,’ so Alice ventured to taste it, and finding it very nice, (it had, in fact, a sort of mixed flavour of cherry-tart, custard, pine-apple, roast turkey, toffee, and hot buttered toast,) she very soon finished it off.</p>

<p>‘What a curious feeling!’ said Alice; ‘I must be shutting up like a telescope.’</p>

<p>And so it was indeed: she was now only ten inches high, and her face brightened up at the thought that she was now the right size for going through the little door into that lovely garden. First, however, she waited for a few minutes to see if she was going to shrink any further: she felt a little nervous about this; ‘for it might end, you know,’ said Alice to herself, ‘in my going out altogether, like a candle. I wonder what I should be like then?’ And she tried to fancy what the flame of a candle is like after the candle is blown out, for she could not remember ever having seen such a thing.</p>

<p>After a while, finding that nothing more happened, she decided on going into the garden at once; but, alas for poor Alice! when she got to the door, she found she had forgotten the little golden key, and when she went back to the table for it, she found she could not possibly reach it: she could see it quite plainly through the glass, and she tried her best to climb up one of the legs of the table, but it was too slippery; and when she had tired herself out with trying, the poor little thing sat down and cried.</p>

<p>‘Come, there’s no use in crying like that!’ said Alice to herself, rather sharply; ‘I advise you to leave off this minute!’ She generally gave herself very good advice, (though she very seldom followed it), and sometimes she scolded herself so severely as to bring tears into her eyes; and once she remembered trying to box her own ears for having cheated herself in a game of croquet she was playing against herself, for this curious child was very fond of pretending to be two people. ‘But it’s no use now,’ thought poor Alice, ‘to pretend to be two people! Why, there’s hardly enough of me left to make one respectable person!’</p>

<p>Soon her eye fell on a little glass box that was lying under the table: she opened it, and found in it a very small cake, on which the words ‘EAT ME’ were beautifully marked in currants. ‘Well, I’ll eat it,’ said Alice, ‘and if it makes me grow larger, I can reach the key; and if it makes me grow smaller, I can creep under the door; so either way I’ll get into the garden, and I don’t care which happens!’</p>

<p>She ate a little bit, and said anxiously to herself, ‘Which way? Which way?’, holding her hand on the top of her head to feel which way it was growing, and she was quite surprised to find that she remained the same size: to be sure, this generally happens when one eats cake, but Alice had got so much into the way of expecting nothing but out-of-the-way things to happen, that it seemed quite dull and stupid for life to go on in the common way.</p>

<p>So she set to work, and very soon finished off the cake.</p>

	  ]]></description>
	</item>


</channel>
</rss>
